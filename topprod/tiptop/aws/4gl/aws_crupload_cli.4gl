#-------------------------------------------------------------------------------
#
# File: aws_crupload_cli.4gl
# GENERATED BY fglwsdl build-73489
#-------------------------------------------------------------------------------
# THIS FILE WAS GENERATED. DO NOT MODIFY.
#-------------------------------------------------------------------------------
#FUN-970006     2009/07/28 by jacklai 新程式 
#DATABASE ds    #FUN-970006
 
IMPORT com
IMPORT xml
 
 
GLOBALS "../4gl/aws_crupload_cli.inc"
 
 
 
#-------------------------------------------------------------------------------
# Service: Uploader
# Port:    UploaderSoap
# Server:  http://10.40.40.3/top3/Uploader.asmx
#-------------------------------------------------------------------------------
 
DEFINE UploadHTTPReq     com.HTTPRequest
DEFINE UploadHTTPResp    com.HTTPResponse
 
#-------------------------------------------------------------------------------
 
#
# Operation: Uploader_Upload
#
 
#
# FUNCTION: Uploader_Upload
#
FUNCTION Uploader_Upload(p_fileName, p_fileContent)
  DEFINE	soapStatus		INTEGER
  DEFINE	p_fileName		STRING
  DEFINE	p_fileContent		BYTE
 
  LET Uploader_Upload.fileName = p_fileName
  LET Uploader_Upload.fileContent = p_fileContent
 
  LET soapStatus = Uploader_Upload_g()
 
  RETURN soapStatus, Uploader_UploadResponse.UploadResult
END FUNCTION
 
#
# FUNCTION: Uploader_Upload_g
#   RETURNING: soapStatus
#   INPUT: GLOBAL Uploader_Upload
#   OUTPUT: GLOBAL Uploader_UploadResponse
#
FUNCTION Uploader_Upload_g()
  DEFINE wsstatus   INTEGER
  DEFINE retryAuth  INTEGER
  DEFINE retryProxy INTEGER
  DEFINE retry      INTEGER
  DEFINE request    com.HTTPRequest
  DEFINE response   com.HTTPResponse
  DEFINE writer     xml.StaxWriter
  DEFINE reader     xml.StaxReader
 
  #
  # INIT VARIABLES
  #
  LET wsstatus = -1
  LET retryAuth = FALSE
  LET retryProxy = FALSE
  LET retry = TRUE
 
  IF Uploader_Uploader_UploaderSoapLocation IS NULL THEN
    LET Uploader_Uploader_UploaderSoapLocation = FGL_GETENV("CRIP"),"Uploader.asmx"
  END IF
 
  #
  # CREATE REQUEST
  #
  TRY
    LET request = com.HTTPRequest.Create(Uploader_Uploader_UploaderSoapLocation)
    CALL request.setMethod("POST")
    CALL request.setCharset("UTF-8")
    CALL request.setHeader("SOAPAction","\"http://tempuri.org/Upload\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    RETURN wsstatus
  END TRY
 
  # START LOOP
  WHILE retry
    LET retry = FALSE
 
    #
    # Stax request
    #
    TRY
      LET writer = request.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(Uploader_Upload,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL request.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY
 
    #
    # PROCESS RESPONSE
    #
    TRY
      LET response = request.getResponse()
 
      CASE response.getStatusCode()
 
        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
 
        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,Uploader_UploadResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
          LET wsstatus = 0
 
        WHEN 401 # HTTP Authentication
          IF retryAuth THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 401 ("||response.getStatusDescription()||")")
          ELSE
            LET retryAuth = TRUE
            LET retry = TRUE
          END IF
 
        WHEN 407 # Proxy Authentication
          IF retryProxy THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 407 ("||response.getStatusDescription()||")")
          ELSE
            LET retryProxy = TRUE
            LET retry = TRUE
          END IF
 
        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||response.getStatusCode()||" ("||response.getStatusDescription()||")")
 
      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY
 
  # END LOOP
  END WHILE
 
  RETURN wsstatus
 
END FUNCTION
 
 
FUNCTION Uploader_UploadRequest_g()
  DEFINE wsstatus   INTEGER
  DEFINE writer     xml.StaxWriter
 
  #
  # CHECK PREVIOUS CALL  
  #
  IF UploadHTTPReq IS NOT NULL AND UploadHTTPResp IS NULL THEN
    # Request was sent but there was no response yet
    CALL WSHelper_FillSOAP11WSError("Client","Cannot issue a new request until previous response was received")
    RETURN -2 # waiting for the response
  ELSE
    IF Uploader_Uploader_UploaderSoapLocation IS NULL THEN
      LET Uploader_Uploader_UploaderSoapLocation = "http://10.40.40.3/top3/Uploader.asmx"
    END IF
  END IF
 
  #
  # CREATE REQUEST
  #
  TRY
    LET UploadHTTPReq = com.HTTPRequest.Create(Uploader_Uploader_UploaderSoapLocation)
    CALL UploadHTTPReq.setMethod("POST")
    CALL UploadHTTPReq.setCharset("UTF-8")
    CALL UploadHTTPReq.setHeader("SOAPAction","\"http://tempuri.org/Upload\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    LET UploadHTTPReq = NULL
    RETURN wsstatus
  END TRY
 
    #
    # Stax request
    #
    TRY
      LET writer = UploadHTTPReq.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(Uploader_Upload,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL UploadHTTPReq.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      LET UploadHTTPReq = NULL
      RETURN wsstatus
    END TRY
 
  #
  # PROCESS RESPONSE
  #
  TRY
    LET UploadHTTPResp = UploadHTTPReq.getAsyncResponse()
    RETURN 0 # SUCCESS
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    LET UploadHTTPReq = NULL
    RETURN wsstatus
  END TRY
END FUNCTION
 
 
FUNCTION Uploader_UploadResponse_g()
  DEFINE wsstatus   INTEGER
  DEFINE reader     xml.StaxReader
 
  LET wsstatus = -1
 
  #
  # CHECK PREVIOUS CALL  
  #
  IF UploadHTTPReq IS NULL THEN
    # No request was sent
    CALL WSHelper_FillSOAP11WSError("Client","No request has been sent")
    RETURN -1
  END IF
 
  TRY
    #
    # PROCESS RESPONSE
    #
    IF UploadHTTPResp IS NULL THEN
      # Still no response, try again
      LET UploadHTTPResp = UploadHTTPReq.getAsyncResponse()
    END IF
 
    IF UploadHTTPResp IS NULL THEN
      # We got no response, still waiting for
      CALL WSHelper_FillSOAP11WSError("Client","Response was not yet received")
      RETURN -2
    END IF
 
      CASE UploadHTTPResp.getStatusCode()
 
        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = UploadHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL UploadHTTPResp.endXmlResponse(reader)
 
        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = UploadHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,Uploader_UploadResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL UploadHTTPResp.endXmlResponse(reader)
          LET wsstatus = 0
 
        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||UploadHTTPResp.getStatusCode()||" ("||UploadHTTPResp.getStatusDescription()||")")
 
      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    END TRY
 
  #
  # RESET VARIABLES
  #
  LET UploadHTTPReq = NULL
  LET UploadHTTPResp = NULL
  RETURN wsstatus
END FUNCTION
 
 
