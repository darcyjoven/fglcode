# Prog. Version..: '5.30.06-13.03.12(00000)'     #
#
#-------------------------------------------------------------------------------
# File: aws_efgpgw.4gl
# GENERATED BY fglwsdl build-587.103
#-------------------------------------------------------------------------------
# Service: TipTopIntegrationService
# Port:    TipTopIntegration
# Server:  http://10.20.10.110:8001/NaNaWeb/services/TipTopIntegration
#-------------------------------------------------------------------------------
# THIS FILE WAS GENERATED. DO NOT MODIFY.
#-------------------------------------------------------------------------------
#Modify........:No.FUN-720042 Genero 2.0
#Modify........:No.FUN-760054 Genero 2.02
#Modify........:No.FUN-880046 08/08/12 by Echo Genero 2.11 調整
 
 
IMPORT com
IMPORT xml
#DATABASE ds    No.FUN-720042 #No.FUN-880046
 
 
GLOBALS "../4gl/aws_efgw.inc"
GLOBALS "../4gl/aws_efgpgw.inc"
 
 
#-------------------------------------------------------------------------------
DEFINE EasyFlowGPGateWayHTTPReq     com.HTTPRequest
DEFINE EasyFlowGPGateWayHTTPResp    com.HTTPResponse
 
#-------------------------------------------------------------------------------
 
#
# Operation: EFGPGateWay_EasyFlowGPGateWay
#
 
#
# FUNCTION: EFGPGateWay_EasyFlowGPGateWay
#
FUNCTION EFGPGateWay_EasyFlowGPGateWay(p_pDocString)
  DEFINE	soapStatus		INTEGER
  DEFINE	p_pDocString		STRING
 
  LET EFGPGateWay_EasyFlowGPGateWayRequest.pDocString = p_pDocString
 
  LET soapStatus = EFGPGateWay_EasyFlowGPGateWay_g()
 
  RETURN soapStatus, EFGPGateWay_EasyFlowGPGateWayResponse.EasyFlowGPGateWayReturn
END FUNCTION
 
#
# FUNCTION: EFGPGateWay_EasyFlowGPGateWay_g
#   RETURNING: soapStatus
#   INPUT: GLOBAL EFGPGateWay_EasyFlowGPGateWayRequest
#   OUTPUT: GLOBAL EFGPGateWay_EasyFlowGPGateWayResponse
#
FUNCTION EFGPGateWay_EasyFlowGPGateWay_g()
  DEFINE wsstatus   INTEGER
  DEFINE retryAuth  INTEGER
  DEFINE retryProxy INTEGER
  DEFINE retry      INTEGER
  DEFINE request    com.HTTPRequest
  DEFINE response   com.HTTPResponse
  DEFINE writer     xml.DomDocument
  DEFINE reader     xml.DomDocument
  DEFINE envelope   xml.DomNode
  DEFINE header     xml.DomNode
  DEFINE body       xml.DomNode
  DEFINE node       xml.DomNode
 
  #
  # INIT VARIABLES
  #
  LET wsstatus = -1
  LET retryAuth = FALSE
  LET retryProxy = FALSE
  LET retry = TRUE
 
  IF EFGPGateWay_soapServerLocation IS NULL THEN
    LET EFGPGateWay_soapServerLocation = "http://10.20.10.110:8001/NaNaWeb/services/TipTopIntegration"
  END IF
 
  #
  # CREATE REQUEST
  #
  TRY
    LET request = com.HTTPRequest.Create(EFGPGateWay_soapServerLocation)
    CALL request.setMethod("POST")
    CALL request.setCharset("UTF-8")
    CALL request.setHeader("SOAPAction","\"\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    RETURN wsstatus
  END TRY
 
  # START LOOP
  WHILE retry
    LET retry = FALSE
 
    #
    # DOM Request
    #
 
    TRY
      # Building SOAP1.1 envelope
      LET writer = xml.DomDocument.Create()
      LET envelope = WSHelper_BuildSOAP11Envelope(writer)
      CALL writer.appendDocumentNode(envelope)
      LET body = WSHelper_BuildSOAP11Body(writer)
      CALL envelope.appendChild(body)
      CALL xml.Serializer.VariableToSoapSection5(EFGPGateWay_EasyFlowGPGateWayRequest,body)
 
      # Send SOAP envelope
      CALL request.doXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY
 
    #
    # PROCESS RESPONSE
    #
    TRY
      LET response = request.getResponse()
 
      CASE response.getStatusCode()
 
        WHEN 500 # SOAP Fault
          #
          # DOM SOAP FAULT
          #
          LET reader = response.getXmlResponse()
          LET envelope = WSHelper_RetrieveSOAP11Envelope(reader)
          IF envelope IS NULL THEN
            EXIT CASE
          END IF
          LET header = WSHelper_CheckSOAP11Header(envelope)
          LET body = WSHelper_RetrieveSOAP11Body(envelope,header)
          IF body IS NULL THEN
            EXIT CASE
          END IF
          CALL WSHelper_CheckSOAP11Fault(body.getFirstChildElement())
 
        WHEN 200 # SOAP Result
          #
          # DOM SOAP RESPONSE
          #
          LET reader = response.getXmlResponse()
          LET envelope = WSHelper_RetrieveSOAP11Envelope(reader)
          IF envelope IS NULL THEN
            EXIT CASE
          END IF
          # Skip headers
          LET header = WSHelper_CheckSOAP11Header(envelope)
          LET body = WSHelper_RetrieveSOAP11Body(envelope,header)
          IF body IS NOT NULL THEN
            # Check message
            LET node = WSHelper_RetrieveSOAP11Message(body)
            IF node IS NOT NULL THEN
              CALL Xml.Serializer.SoapSection5ToVariable(node,EFGPGateWay_EasyFlowGPGateWayResponse)
              LET wsstatus = 0
            END IF
          END IF
 
        WHEN 401 # HTTP Authentication
          IF retryAuth THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 401 ("||response.getStatusDescription()||")")
          ELSE
            LET retryAuth = TRUE
            LET retry = TRUE
          END IF
 
        WHEN 407 # Proxy Authentication
          IF retryProxy THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 407 ("||response.getStatusDescription()||")")
          ELSE
            LET retryProxy = TRUE
            LET retry = TRUE
          END IF
 
        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||response.getStatusCode()||" ("||response.getStatusDescription()||")")
 
      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY
 
  # END LOOP
  END WHILE
 
  RETURN wsstatus
 
END FUNCTION
 
 
FUNCTION EFGPGateWay_EasyFlowGPGateWayRequest_g()
  DEFINE wsstatus   INTEGER
  DEFINE writer     xml.DomDocument
  DEFINE envelope   xml.DomNode
  DEFINE header     xml.DomNode
  DEFINE body       xml.DomNode
  DEFINE node       xml.DomNode
 
  #
  # CHECK PREVIOUS CALL  
  #
  IF EasyFlowGPGateWayHTTPReq IS NOT NULL AND EasyFlowGPGateWayHTTPResp IS NULL THEN
    # Request was sent but there was no response yet
    CALL WSHelper_FillSOAP11WSError("Client","Cannot issue a new request until previous response was received")
    RETURN -2 # waiting for the response
  ELSE
    IF EFGPGateWay_soapServerLocation IS NULL THEN
      LET EFGPGateWay_soapServerLocation = "http://10.20.10.110:8001/NaNaWeb/services/TipTopIntegration"
    END IF
  END IF
 
  #
  # CREATE REQUEST
  #
  TRY
    LET EasyFlowGPGateWayHTTPReq = com.HTTPRequest.Create(EFGPGateWay_soapServerLocation)
    CALL EasyFlowGPGateWayHTTPReq.setMethod("POST")
    CALL EasyFlowGPGateWayHTTPReq.setCharset("UTF-8")
    CALL EasyFlowGPGateWayHTTPReq.setHeader("SOAPAction","\"\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    LET EasyFlowGPGateWayHTTPReq = NULL
    RETURN wsstatus
  END TRY
 
    #
    # DOM Request
    #
 
    TRY
      # Building SOAP1.1 envelope
      LET writer = xml.DomDocument.Create()
      LET envelope = WSHelper_BuildSOAP11Envelope(writer)
      CALL writer.appendDocumentNode(envelope)
      LET body = WSHelper_BuildSOAP11Body(writer)
      CALL envelope.appendChild(body)
      CALL xml.Serializer.VariableToSoapSection5(EFGPGateWay_EasyFlowGPGateWayRequest,body)
 
      # Send SOAP envelope
      CALL EasyFlowGPGateWayHTTPReq.doXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      LET EasyFlowGPGateWayHTTPReq = NULL
      RETURN wsstatus
    END TRY
 
  #
  # PROCESS RESPONSE
  #
  TRY
    LET EasyFlowGPGateWayHTTPResp = EasyFlowGPGateWayHTTPReq.getAsyncResponse()
    RETURN 0 # SUCCESS
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    LET EasyFlowGPGateWayHTTPReq = NULL
    RETURN wsstatus
  END TRY
END FUNCTION
 
 
FUNCTION EFGPGateWay_EasyFlowGPGateWayResponse_g()
  DEFINE wsstatus   INTEGER
  DEFINE reader     xml.DomDocument
  DEFINE envelope   xml.DomNode
  DEFINE header     xml.DomNode
  DEFINE body       xml.DomNode
  DEFINE node       xml.DomNode
 
  LET wsstatus = -1
 
  #
  # CHECK PREVIOUS CALL  
  #
  IF EasyFlowGPGateWayHTTPReq IS NULL THEN
    # No request was sent
    CALL WSHelper_FillSOAP11WSError("Client","No request has been sent")
    RETURN -1
  END IF
 
  TRY
    #
    # PROCESS RESPONSE
    #
    IF EasyFlowGPGateWayHTTPResp IS NULL THEN
      # Still no response, try again
      LET EasyFlowGPGateWayHTTPResp = EasyFlowGPGateWayHTTPReq.getAsyncResponse()
    END IF
 
    IF EasyFlowGPGateWayHTTPResp IS NULL THEN
      # We got no response, still waiting for
      CALL WSHelper_FillSOAP11WSError("Client","Response was not yet received")
      RETURN -2
    END IF
 
      CASE EasyFlowGPGateWayHTTPResp.getStatusCode()
 
        WHEN 500 # SOAP Fault
          #
          # DOM SOAP FAULT
          #
          LET reader = EasyFlowGPGateWayHTTPResp.getXmlResponse()
          LET envelope = WSHelper_RetrieveSOAP11Envelope(reader)
          IF envelope IS NULL THEN
            EXIT CASE
          END IF
          LET header = WSHelper_CheckSOAP11Header(envelope)
          LET body = WSHelper_RetrieveSOAP11Body(envelope,header)
          IF body IS NULL THEN
            EXIT CASE
          END IF
          CALL WSHelper_CheckSOAP11Fault(body.getFirstChildElement())
 
        WHEN 200 # SOAP Result
          #
          # DOM SOAP RESPONSE
          #
          LET reader = EasyFlowGPGateWayHTTPResp.getXmlResponse()
          LET envelope = WSHelper_RetrieveSOAP11Envelope(reader)
          IF envelope IS NULL THEN
            EXIT CASE
          END IF
          # Skip headers
          LET header = WSHelper_CheckSOAP11Header(envelope)
          LET body = WSHelper_RetrieveSOAP11Body(envelope,header)
          IF body IS NOT NULL THEN
            # Check message
            LET node = WSHelper_RetrieveSOAP11Message(body)
            IF node IS NOT NULL THEN
              CALL Xml.Serializer.SoapSection5ToVariable(node,EFGPGateWay_EasyFlowGPGateWayResponse)
              LET wsstatus = 0
            END IF
          END IF
 
        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||EasyFlowGPGateWayHTTPResp.getStatusCode()||" ("||EasyFlowGPGateWayHTTPResp.getStatusDescription()||")")
 
      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    END TRY
 
  #
  # RESET VARIABLES
  #
  LET EasyFlowGPGateWayHTTPReq = NULL
  LET EasyFlowGPGateWayHTTPResp = NULL
  RETURN wsstatus
END FUNCTION
 
 
