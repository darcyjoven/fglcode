# Prog. Version..: '5.30.06-13.03.12(00000)'     #
#
#-------------------------------------------------------------------------------
# File: aws_mdmgw.4gl
# GENERATED BY fglwsdl build-587.103
#-------------------------------------------------------------------------------
# Service: IMDMWebService
# Port:    IMDMWebServiceMulePort
# Server:  http://localhost:8084/MDM/services/IMDMWebService
#-------------------------------------------------------------------------------
# THIS FILE WAS GENERATED. DO NOT MODIFY.
#-------------------------------------------------------------------------------
# Date & Author..: 08/06/05 By Echo  FUN-850147
# Modify.........: No.FUN-880046 08/08/12 by Echo Genero 2.11 調整
# Modify.........: No.FUN-870166 08/07/30 By kevin 重新產生wsdl 
 
 
IMPORT com
IMPORT xml
 
#DATABASE ds
#FUN-850147 #No.FUN-880046 #FUN-870166
 
GLOBALS "../4gl/aws_mdmgw.inc"
 
#-------------------------------------------------------------------------------
DEFINE invokeMDMFlowHTTPReq     com.HTTPRequest
DEFINE invokeMDMFlowHTTPResp    com.HTTPResponse
 
DEFINE testHTTPReq     com.HTTPRequest
DEFINE testHTTPResp    com.HTTPResponse
 
#-------------------------------------------------------------------------------
 
#
# Operation: invokeMDMFlow
#
#
# FUNCTION: invokeMDMFlow_g
#   RETURNING: soapStatus
#   INPUT: GLOBAL ns2invokeMDMFlow
#   OUTPUT: GLOBAL ns2invokeMDMFlowResponse
#
FUNCTION invokeMDMFlow_g()
  DEFINE wsstatus   INTEGER
  DEFINE retryAuth  INTEGER
  DEFINE retryProxy INTEGER
  DEFINE retry      INTEGER
  DEFINE request    com.HTTPRequest
  DEFINE response   com.HTTPResponse
  DEFINE writer     xml.StaxWriter
  DEFINE reader     xml.StaxReader
 
  #
  # INIT VARIABLES
  #
  LET wsstatus = -1
  LET retryAuth = FALSE
  LET retryProxy = FALSE
  LET retry = TRUE
 
  IF IMDMWebService_IMDMWebServiceMulePortLocation IS NULL THEN
    LET IMDMWebService_IMDMWebServiceMulePortLocation = "http://localhost:8084/MDM/services/IMDMWebService"
  END IF
 
  #
  # CREATE REQUEST
  #
  TRY
    LET request = com.HTTPRequest.Create(IMDMWebService_IMDMWebServiceMulePortLocation)
    CALL request.setMethod("POST")
    CALL request.setCharset("UTF-8")
    CALL request.setHeader("SOAPAction","\"\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    RETURN wsstatus
  END TRY
 
  # START LOOP
  WHILE retry
    LET retry = FALSE
 
    #
    # Stax request
    #
    TRY
      LET writer = request.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(ns2invokeMDMFlow,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL request.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY
 
    #
    # PROCESS RESPONSE
    #
    TRY
      LET response = request.getResponse()
 
      CASE response.getStatusCode()
 
        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
 
        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,ns2invokeMDMFlowResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
          LET wsstatus = 0
 
        WHEN 401 # HTTP Authentication
          IF retryAuth THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 401 ("||response.getStatusDescription()||")")
          ELSE
            LET retryAuth = TRUE
            LET retry = TRUE
          END IF
 
        WHEN 407 # Proxy Authentication
          IF retryProxy THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 407 ("||response.getStatusDescription()||")")
          ELSE
            LET retryProxy = TRUE
            LET retry = TRUE
          END IF
 
        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||response.getStatusCode()||" ("||response.getStatusDescription()||")")
 
      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY
 
  # END LOOP
  END WHILE
 
  RETURN wsstatus
 
END FUNCTION
 
 
FUNCTION invokeMDMFlowRequest_g()
  DEFINE wsstatus   INTEGER
  DEFINE writer     xml.StaxWriter
 
  #
  # CHECK PREVIOUS CALL  
  #
  IF invokeMDMFlowHTTPReq IS NOT NULL AND invokeMDMFlowHTTPResp IS NULL THEN
    # Request was sent but there was no response yet
    CALL WSHelper_FillSOAP11WSError("Client","Cannot issue a new request until previous response was received")
    RETURN -2 # waiting for the response
  ELSE
    IF IMDMWebService_IMDMWebServiceMulePortLocation IS NULL THEN
      LET IMDMWebService_IMDMWebServiceMulePortLocation = "http://localhost:8084/MDM/services/IMDMWebService"
    END IF
  END IF
 
  #
  # CREATE REQUEST
  #
  TRY
    LET invokeMDMFlowHTTPReq = com.HTTPRequest.Create(IMDMWebService_IMDMWebServiceMulePortLocation)
    CALL invokeMDMFlowHTTPReq.setMethod("POST")
    CALL invokeMDMFlowHTTPReq.setCharset("UTF-8")
    CALL invokeMDMFlowHTTPReq.setHeader("SOAPAction","\"\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    LET invokeMDMFlowHTTPReq = NULL
    RETURN wsstatus
  END TRY
 
    #
    # Stax request
    #
    TRY
      LET writer = invokeMDMFlowHTTPReq.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(ns2invokeMDMFlow,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL invokeMDMFlowHTTPReq.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      LET invokeMDMFlowHTTPReq = NULL
      RETURN wsstatus
    END TRY
 
  #
  # PROCESS RESPONSE
  #
  TRY
    LET invokeMDMFlowHTTPResp = invokeMDMFlowHTTPReq.getAsyncResponse()
    RETURN 0 # SUCCESS
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    LET invokeMDMFlowHTTPReq = NULL
    RETURN wsstatus
  END TRY
END FUNCTION
 
 
FUNCTION invokeMDMFlowResponse_g()
  DEFINE wsstatus   INTEGER
  DEFINE reader     xml.StaxReader
 
  LET wsstatus = -1
 
  #
  # CHECK PREVIOUS CALL  
  #
  IF invokeMDMFlowHTTPReq IS NULL THEN
    # No request was sent
    CALL WSHelper_FillSOAP11WSError("Client","No request has been sent")
    RETURN -1
  END IF
 
  TRY
    #
    # PROCESS RESPONSE
    #
    IF invokeMDMFlowHTTPResp IS NULL THEN
      # Still no response, try again
      LET invokeMDMFlowHTTPResp = invokeMDMFlowHTTPReq.getAsyncResponse()
    END IF
 
    IF invokeMDMFlowHTTPResp IS NULL THEN
      # We got no response, still waiting for
      CALL WSHelper_FillSOAP11WSError("Client","Response was not yet received")
      RETURN -2
    END IF
 
      CASE invokeMDMFlowHTTPResp.getStatusCode()
 
        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = invokeMDMFlowHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL invokeMDMFlowHTTPResp.endXmlResponse(reader)
 
        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = invokeMDMFlowHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,ns2invokeMDMFlowResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL invokeMDMFlowHTTPResp.endXmlResponse(reader)
          LET wsstatus = 0
 
        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||invokeMDMFlowHTTPResp.getStatusCode()||" ("||invokeMDMFlowHTTPResp.getStatusDescription()||")")
 
      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    END TRY
 
  #
  # RESET VARIABLES
  #
  LET invokeMDMFlowHTTPReq = NULL
  LET invokeMDMFlowHTTPResp = NULL
  RETURN wsstatus
END FUNCTION
 
 
 
#
# Operation: test
#
 
#
# FUNCTION: test
#
FUNCTION test(p_in0)
  DEFINE	soapStatus		INTEGER
  DEFINE	p_in0		STRING
 
  LET ns2test.in0 = p_in0
 
  LET soapStatus = test_g()
 
  RETURN soapStatus, ns2testResponse.out
END FUNCTION
 
#
# FUNCTION: test_g
#   RETURNING: soapStatus
#   INPUT: GLOBAL ns2test
#   OUTPUT: GLOBAL ns2testResponse
#
FUNCTION test_g()
  DEFINE wsstatus   INTEGER
  DEFINE retryAuth  INTEGER
  DEFINE retryProxy INTEGER
  DEFINE retry      INTEGER
  DEFINE request    com.HTTPRequest
  DEFINE response   com.HTTPResponse
  DEFINE writer     xml.StaxWriter
  DEFINE reader     xml.StaxReader
 
  #
  # INIT VARIABLES
  #
  LET wsstatus = -1
  LET retryAuth = FALSE
  LET retryProxy = FALSE
  LET retry = TRUE
 
  IF IMDMWebService_IMDMWebServiceMulePortLocation IS NULL THEN
    LET IMDMWebService_IMDMWebServiceMulePortLocation = "http://localhost:8084/MDM/services/IMDMWebService"
  END IF
 
  #
  # CREATE REQUEST
  #
  TRY
    LET request = com.HTTPRequest.Create(IMDMWebService_IMDMWebServiceMulePortLocation)
    CALL request.setMethod("POST")
    CALL request.setCharset("UTF-8")
    CALL request.setHeader("SOAPAction","\"\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    RETURN wsstatus
  END TRY
 
  # START LOOP
  WHILE retry
    LET retry = FALSE
 
    #
    # Stax request
    #
    TRY
      LET writer = request.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(ns2test,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL request.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY
 
    #
    # PROCESS RESPONSE
    #
    TRY
      LET response = request.getResponse()
 
      CASE response.getStatusCode()
 
        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
 
        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,ns2testResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
          LET wsstatus = 0
 
        WHEN 401 # HTTP Authentication
          IF retryAuth THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 401 ("||response.getStatusDescription()||")")
          ELSE
            LET retryAuth = TRUE
            LET retry = TRUE
          END IF
 
        WHEN 407 # Proxy Authentication
          IF retryProxy THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 407 ("||response.getStatusDescription()||")")
          ELSE
            LET retryProxy = TRUE
            LET retry = TRUE
          END IF
 
        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||response.getStatusCode()||" ("||response.getStatusDescription()||")")
 
      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY
 
  # END LOOP
  END WHILE
 
  RETURN wsstatus
 
END FUNCTION
 
 
FUNCTION testRequest_g()
  DEFINE wsstatus   INTEGER
  DEFINE writer     xml.StaxWriter
 
  #
  # CHECK PREVIOUS CALL  
  #
  IF testHTTPReq IS NOT NULL AND testHTTPResp IS NULL THEN
    # Request was sent but there was no response yet
    CALL WSHelper_FillSOAP11WSError("Client","Cannot issue a new request until previous response was received")
    RETURN -2 # waiting for the response
  ELSE
    IF IMDMWebService_IMDMWebServiceMulePortLocation IS NULL THEN
      LET IMDMWebService_IMDMWebServiceMulePortLocation = "http://localhost:8084/MDM/services/IMDMWebService"
    END IF
  END IF
 
  #
  # CREATE REQUEST
  #
  TRY
    LET testHTTPReq = com.HTTPRequest.Create(IMDMWebService_IMDMWebServiceMulePortLocation)
    CALL testHTTPReq.setMethod("POST")
    CALL testHTTPReq.setCharset("UTF-8")
    CALL testHTTPReq.setHeader("SOAPAction","\"\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    LET testHTTPReq = NULL
    RETURN wsstatus
  END TRY
 
    #
    # Stax request
    #
    TRY
      LET writer = testHTTPReq.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(ns2test,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL testHTTPReq.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      LET testHTTPReq = NULL
      RETURN wsstatus
    END TRY
 
  #
  # PROCESS RESPONSE
  #
  TRY
    LET testHTTPResp = testHTTPReq.getAsyncResponse()
    RETURN 0 # SUCCESS
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    LET testHTTPReq = NULL
    RETURN wsstatus
  END TRY
END FUNCTION
 
 
FUNCTION testResponse_g()
  DEFINE wsstatus   INTEGER
  DEFINE reader     xml.StaxReader
 
  LET wsstatus = -1
 
  #
  # CHECK PREVIOUS CALL  
  #
  IF testHTTPReq IS NULL THEN
    # No request was sent
    CALL WSHelper_FillSOAP11WSError("Client","No request has been sent")
    RETURN -1
  END IF
 
  TRY
    #
    # PROCESS RESPONSE
    #
    IF testHTTPResp IS NULL THEN
      # Still no response, try again
      LET testHTTPResp = testHTTPReq.getAsyncResponse()
    END IF
 
    IF testHTTPResp IS NULL THEN
      # We got no response, still waiting for
      CALL WSHelper_FillSOAP11WSError("Client","Response was not yet received")
      RETURN -2
    END IF
 
      CASE testHTTPResp.getStatusCode()
 
        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = testHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL testHTTPResp.endXmlResponse(reader)
 
        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = testHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,ns2testResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL testHTTPResp.endXmlResponse(reader)
          LET wsstatus = 0
 
        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||testHTTPResp.getStatusCode()||" ("||testHTTPResp.getStatusDescription()||")")
 
      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    END TRY
 
  #
  # RESET VARIABLES
  #
  LET testHTTPReq = NULL
  LET testHTTPResp = NULL
  RETURN wsstatus
END FUNCTION
 
 
