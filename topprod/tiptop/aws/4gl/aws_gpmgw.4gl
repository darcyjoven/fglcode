# Prog. Version..: '5.30.06-13.03.12(00000)'     #
#
#-------------------------------------------------------------------------------
# File: aws_gpmgw.4gl
# GENERATED BY fglwsdl build-587.103
#-------------------------------------------------------------------------------
# Service: CtrlGreenStatus
# Port:    CtrlGreenStatusSoap
# Server:  http://59.124.43.70:9715/EZFinance/GPS/GPMService/GPMStatus/CtrlgreenStatus.asmx
#-------------------------------------------------------------------------------
# THIS FILE WAS GENERATED. DO NOT MODIFY.
#-------------------------------------------------------------------------------
# Modify....: NO.FUN-880016 08/08/18 BY yiting
# Modify....: No.MOD-8C0012 08/12/02 by kevin 調整GLOBALS變數aws_gpmgw.inc路徑
 
#DATABASE ds
#NO.FUN-880016 
 
IMPORT com
IMPORT xml
 
 
GLOBALS "../4gl/aws_gpmgw.inc" #MOD-8C0012
 
#-------------------------------------------------------------------------------
DEFINE GetPartGreenBySupplierPartsHTTPReq     com.HTTPRequest
DEFINE GetPartGreenBySupplierPartsHTTPResp    com.HTTPResponse
 
DEFINE QrySupplierPartStatusHTTPReq     com.HTTPRequest
DEFINE QrySupplierPartStatusHTTPResp    com.HTTPResponse
 
#-------------------------------------------------------------------------------
 
#
# Operation: gpmService_GetPartGreenBySupplierParts
#
 
#
# FUNCTION: gpmService_GetPartGreenBySupplierParts
#
FUNCTION gpmService_GetPartGreenBySupplierParts(p_sRequestXML)
  DEFINE	soapStatus		INTEGER
  DEFINE	p_sRequestXML		STRING
 
  LET gpmService_GetPartGreenBySupplierParts.sRequestXML = p_sRequestXML
 
  LET soapStatus = gpmService_GetPartGreenBySupplierParts_g()
 
  RETURN soapStatus, gpmService_GetPartGreenBySupplierPartsResponse.GetPartGreenBySupplierPartsResult
END FUNCTION
 
#
# FUNCTION: gpmService_GetPartGreenBySupplierParts_g
#   RETURNING: soapStatus
#   INPUT: GLOBAL gpmService_GetPartGreenBySupplierParts
#   OUTPUT: GLOBAL gpmService_GetPartGreenBySupplierPartsResponse
#
FUNCTION gpmService_GetPartGreenBySupplierParts_g()
  DEFINE wsstatus   INTEGER
  DEFINE retryAuth  INTEGER
  DEFINE retryProxy INTEGER
  DEFINE retry      INTEGER
  DEFINE request    com.HTTPRequest
  DEFINE response   com.HTTPResponse
  DEFINE writer     xml.StaxWriter
  DEFINE reader     xml.StaxReader
 
  #
  # INIT VARIABLES
  #
  LET wsstatus = -1
  LET retryAuth = FALSE
  LET retryProxy = FALSE
  LET retry = TRUE
 
  IF gpmService_CtrlGreenStatus_CtrlGreenStatusSoapLocation IS NULL THEN
    LET gpmService_CtrlGreenStatus_CtrlGreenStatusSoapLocation = "http://59.124.43.70:9715/EZFinance/GPS/GPMService/GPMStatus/CtrlgreenStatus.asmx"
  END IF
 
  #
  # CREATE REQUEST
  #
  TRY
    LET request = com.HTTPRequest.Create(gpmService_CtrlGreenStatus_CtrlGreenStatusSoapLocation)
    CALL request.setMethod("POST")
    CALL request.setCharset("UTF-8")
    CALL request.setHeader("SOAPAction","\"http://tempuri.org/GetPartGreenBySupplierParts\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    RETURN wsstatus
  END TRY
 
  # START LOOP
  WHILE retry
    LET retry = FALSE
 
    #
    # Stax request
    #
    TRY
      LET writer = request.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(gpmService_GetPartGreenBySupplierParts,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL request.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY
 
    #
    # PROCESS RESPONSE
    #
    TRY
      LET response = request.getResponse()
 
      CASE response.getStatusCode()
 
        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
 
        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,gpmService_GetPartGreenBySupplierPartsResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
          LET wsstatus = 0
 
        WHEN 401 # HTTP Authentication
          IF retryAuth THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 401 ("||response.getStatusDescription()||")")
          ELSE
            LET retryAuth = TRUE
            LET retry = TRUE
          END IF
 
        WHEN 407 # Proxy Authentication
          IF retryProxy THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 407 ("||response.getStatusDescription()||")")
          ELSE
            LET retryProxy = TRUE
            LET retry = TRUE
          END IF
 
        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||response.getStatusCode()||" ("||response.getStatusDescription()||")")
 
      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY
 
  # END LOOP
  END WHILE
 
  RETURN wsstatus
 
END FUNCTION
 
 
FUNCTION gpmService_GetPartGreenBySupplierPartsRequest_g()
  DEFINE wsstatus   INTEGER
  DEFINE writer     xml.StaxWriter
 
  #
  # CHECK PREVIOUS CALL  
  #
  IF GetPartGreenBySupplierPartsHTTPReq IS NOT NULL AND GetPartGreenBySupplierPartsHTTPResp IS NULL THEN
    # Request was sent but there was no response yet
    CALL WSHelper_FillSOAP11WSError("Client","Cannot issue a new request until previous response was received")
    RETURN -2 # waiting for the response
  ELSE
    IF gpmService_CtrlGreenStatus_CtrlGreenStatusSoapLocation IS NULL THEN
      LET gpmService_CtrlGreenStatus_CtrlGreenStatusSoapLocation = "http://59.124.43.70:9715/EZFinance/GPS/GPMService/GPMStatus/CtrlgreenStatus.asmx"
    END IF
  END IF
 
  #
  # CREATE REQUEST
  #
  TRY
    LET GetPartGreenBySupplierPartsHTTPReq = com.HTTPRequest.Create(gpmService_CtrlGreenStatus_CtrlGreenStatusSoapLocation)
    CALL GetPartGreenBySupplierPartsHTTPReq.setMethod("POST")
    CALL GetPartGreenBySupplierPartsHTTPReq.setCharset("UTF-8")
    CALL GetPartGreenBySupplierPartsHTTPReq.setHeader("SOAPAction","\"http://tempuri.org/GetPartGreenBySupplierParts\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    LET GetPartGreenBySupplierPartsHTTPReq = NULL
    RETURN wsstatus
  END TRY
 
    #
    # Stax request
    #
    TRY
      LET writer = GetPartGreenBySupplierPartsHTTPReq.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(gpmService_GetPartGreenBySupplierParts,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL GetPartGreenBySupplierPartsHTTPReq.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      LET GetPartGreenBySupplierPartsHTTPReq = NULL
      RETURN wsstatus
    END TRY
 
  #
  # PROCESS RESPONSE
  #
  TRY
    LET GetPartGreenBySupplierPartsHTTPResp = GetPartGreenBySupplierPartsHTTPReq.getAsyncResponse()
    RETURN 0 # SUCCESS
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    LET GetPartGreenBySupplierPartsHTTPReq = NULL
    RETURN wsstatus
  END TRY
END FUNCTION
 
 
FUNCTION gpmService_GetPartGreenBySupplierPartsResponse_g()
  DEFINE wsstatus   INTEGER
  DEFINE reader     xml.StaxReader
 
  LET wsstatus = -1
 
  #
  # CHECK PREVIOUS CALL  
  #
  IF GetPartGreenBySupplierPartsHTTPReq IS NULL THEN
    # No request was sent
    CALL WSHelper_FillSOAP11WSError("Client","No request has been sent")
    RETURN -1
  END IF
 
  TRY
    #
    # PROCESS RESPONSE
    #
    IF GetPartGreenBySupplierPartsHTTPResp IS NULL THEN
      # Still no response, try again
      LET GetPartGreenBySupplierPartsHTTPResp = GetPartGreenBySupplierPartsHTTPReq.getAsyncResponse()
    END IF
 
    IF GetPartGreenBySupplierPartsHTTPResp IS NULL THEN
      # We got no response, still waiting for
      CALL WSHelper_FillSOAP11WSError("Client","Response was not yet received")
      RETURN -2
    END IF
 
      CASE GetPartGreenBySupplierPartsHTTPResp.getStatusCode()
 
        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = GetPartGreenBySupplierPartsHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL GetPartGreenBySupplierPartsHTTPResp.endXmlResponse(reader)
 
        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = GetPartGreenBySupplierPartsHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,gpmService_GetPartGreenBySupplierPartsResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL GetPartGreenBySupplierPartsHTTPResp.endXmlResponse(reader)
          LET wsstatus = 0
 
        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||GetPartGreenBySupplierPartsHTTPResp.getStatusCode()||" ("||GetPartGreenBySupplierPartsHTTPResp.getStatusDescription()||")")
 
      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    END TRY
 
  #
  # RESET VARIABLES
  #
  LET GetPartGreenBySupplierPartsHTTPReq = NULL
  LET GetPartGreenBySupplierPartsHTTPResp = NULL
  RETURN wsstatus
END FUNCTION
 
 
 
#
# Operation: gpmService_QrySupplierPartStatus
#
 
#
# FUNCTION: gpmService_QrySupplierPartStatus
#
FUNCTION gpmService_QrySupplierPartStatus(p_sRequestXML)
  DEFINE	soapStatus		INTEGER
  DEFINE	p_sRequestXML		STRING
 
  LET gpmService_QrySupplierPartStatus.sRequestXML = p_sRequestXML
 
  LET soapStatus = gpmService_QrySupplierPartStatus_g()
 
  RETURN soapStatus, gpmService_QrySupplierPartStatusResponse.QrySupplierPartStatusResult
END FUNCTION
 
#
# FUNCTION: gpmService_QrySupplierPartStatus_g
#   RETURNING: soapStatus
#   INPUT: GLOBAL gpmService_QrySupplierPartStatus
#   OUTPUT: GLOBAL gpmService_QrySupplierPartStatusResponse
#
FUNCTION gpmService_QrySupplierPartStatus_g()
  DEFINE wsstatus   INTEGER
  DEFINE retryAuth  INTEGER
  DEFINE retryProxy INTEGER
  DEFINE retry      INTEGER
  DEFINE request    com.HTTPRequest
  DEFINE response   com.HTTPResponse
  DEFINE writer     xml.StaxWriter
  DEFINE reader     xml.StaxReader
 
  #
  # INIT VARIABLES
  #
  LET wsstatus = -1
  LET retryAuth = FALSE
  LET retryProxy = FALSE
  LET retry = TRUE
 
  IF gpmService_CtrlGreenStatus_CtrlGreenStatusSoapLocation IS NULL THEN
    LET gpmService_CtrlGreenStatus_CtrlGreenStatusSoapLocation = "http://59.124.43.70:9715/EZFinance/GPS/GPMService/GPMStatus/CtrlgreenStatus.asmx"
  END IF
 
  #
  # CREATE REQUEST
  #
  TRY
    LET request = com.HTTPRequest.Create(gpmService_CtrlGreenStatus_CtrlGreenStatusSoapLocation)
    CALL request.setMethod("POST")
    CALL request.setCharset("UTF-8")
    CALL request.setHeader("SOAPAction","\"http://tempuri.org/QrySupplierPartStatus\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    RETURN wsstatus
  END TRY
 
  # START LOOP
  WHILE retry
    LET retry = FALSE
 
    #
    # Stax request
    #
    TRY
      LET writer = request.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(gpmService_QrySupplierPartStatus,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL request.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY
 
    #
    # PROCESS RESPONSE
    #
    TRY
      LET response = request.getResponse()
 
      CASE response.getStatusCode()
 
        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
 
        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,gpmService_QrySupplierPartStatusResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
          LET wsstatus = 0
 
        WHEN 401 # HTTP Authentication
          IF retryAuth THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 401 ("||response.getStatusDescription()||")")
          ELSE
            LET retryAuth = TRUE
            LET retry = TRUE
          END IF
 
        WHEN 407 # Proxy Authentication
          IF retryProxy THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 407 ("||response.getStatusDescription()||")")
          ELSE
            LET retryProxy = TRUE
            LET retry = TRUE
          END IF
 
        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||response.getStatusCode()||" ("||response.getStatusDescription()||")")
 
      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY
 
  # END LOOP
  END WHILE
 
  RETURN wsstatus
 
END FUNCTION
 
 
FUNCTION gpmService_QrySupplierPartStatusRequest_g()
  DEFINE wsstatus   INTEGER
  DEFINE writer     xml.StaxWriter
 
  #
  # CHECK PREVIOUS CALL  
  #
  IF QrySupplierPartStatusHTTPReq IS NOT NULL AND QrySupplierPartStatusHTTPResp IS NULL THEN
    # Request was sent but there was no response yet
    CALL WSHelper_FillSOAP11WSError("Client","Cannot issue a new request until previous response was received")
    RETURN -2 # waiting for the response
  ELSE
    IF gpmService_CtrlGreenStatus_CtrlGreenStatusSoapLocation IS NULL THEN
      LET gpmService_CtrlGreenStatus_CtrlGreenStatusSoapLocation = "http://59.124.43.70:9715/EZFinance/GPS/GPMService/GPMStatus/CtrlgreenStatus.asmx"
    END IF
  END IF
 
  #
  # CREATE REQUEST
  #
  TRY
    LET QrySupplierPartStatusHTTPReq = com.HTTPRequest.Create(gpmService_CtrlGreenStatus_CtrlGreenStatusSoapLocation)
    CALL QrySupplierPartStatusHTTPReq.setMethod("POST")
    CALL QrySupplierPartStatusHTTPReq.setCharset("UTF-8")
    CALL QrySupplierPartStatusHTTPReq.setHeader("SOAPAction","\"http://tempuri.org/QrySupplierPartStatus\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    LET QrySupplierPartStatusHTTPReq = NULL
    RETURN wsstatus
  END TRY
 
    #
    # Stax request
    #
    TRY
      LET writer = QrySupplierPartStatusHTTPReq.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(gpmService_QrySupplierPartStatus,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL QrySupplierPartStatusHTTPReq.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      LET QrySupplierPartStatusHTTPReq = NULL
      RETURN wsstatus
    END TRY
 
  #
  # PROCESS RESPONSE
  #
  TRY
    LET QrySupplierPartStatusHTTPResp = QrySupplierPartStatusHTTPReq.getAsyncResponse()
    RETURN 0 # SUCCESS
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    LET QrySupplierPartStatusHTTPReq = NULL
    RETURN wsstatus
  END TRY
END FUNCTION
 
 
FUNCTION gpmService_QrySupplierPartStatusResponse_g()
  DEFINE wsstatus   INTEGER
  DEFINE reader     xml.StaxReader
 
  LET wsstatus = -1
 
  #
  # CHECK PREVIOUS CALL  
  #
  IF QrySupplierPartStatusHTTPReq IS NULL THEN
    # No request was sent
    CALL WSHelper_FillSOAP11WSError("Client","No request has been sent")
    RETURN -1
  END IF
 
  TRY
    #
    # PROCESS RESPONSE
    #
    IF QrySupplierPartStatusHTTPResp IS NULL THEN
      # Still no response, try again
      LET QrySupplierPartStatusHTTPResp = QrySupplierPartStatusHTTPReq.getAsyncResponse()
    END IF
 
    IF QrySupplierPartStatusHTTPResp IS NULL THEN
      # We got no response, still waiting for
      CALL WSHelper_FillSOAP11WSError("Client","Response was not yet received")
      RETURN -2
    END IF
 
      CASE QrySupplierPartStatusHTTPResp.getStatusCode()
 
        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = QrySupplierPartStatusHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL QrySupplierPartStatusHTTPResp.endXmlResponse(reader)
 
        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = QrySupplierPartStatusHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,gpmService_QrySupplierPartStatusResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL QrySupplierPartStatusHTTPResp.endXmlResponse(reader)
          LET wsstatus = 0
 
        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||QrySupplierPartStatusHTTPResp.getStatusCode()||" ("||QrySupplierPartStatusHTTPResp.getStatusDescription()||")")
 
      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    END TRY
 
  #
  # RESET VARIABLES
  #
  LET QrySupplierPartStatusHTTPReq = NULL
  LET QrySupplierPartStatusHTTPResp = NULL
  RETURN wsstatus
END FUNCTION
 
 
