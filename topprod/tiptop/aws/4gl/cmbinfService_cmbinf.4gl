# Prog. Version..: '5.30.06-13.03.12(00000)'     #
#
#-------------------------------------------------------------------------------
# File: cmbinfService_cmbinf.4gl
# GENERATED BY fglwsdl build-587.103
#-------------------------------------------------------------------------------
# Service: cmbinfService
# Port:    cmbinf
# Server:  http://192.168.100.161:8080/axis/cmbinf.jws
#-------------------------------------------------------------------------------
# THIS FILE WAS GENERATED. DO NOT MODIFY.
#-------------------------------------------------------------------------------
# Modify.........: No.MOD-820048 08/02/14 By alex 標準化GLOBALS路徑
# Modify.........: No.FUN-880071 08/08/19 by Echo Genero 2.11 調整
 
#DATABASE ds
#FUN-880071
 
IMPORT com
IMPORT xml
 
GLOBALS "../4gl/cmbinfService_cmbinf.inc"     #MOD-820048
 
#-------------------------------------------------------------------------------
DEFINE mainHTTPReq     com.HTTPRequest
DEFINE mainHTTPResp    com.HTTPResponse
 
DEFINE connectHTTPReq     com.HTTPRequest
DEFINE connectHTTPResp    com.HTTPResponse
 
#-------------------------------------------------------------------------------
 
#
# Operation: main
#
#
# FUNCTION: main_g
#   RETURNING: soapStatus
#   INPUT: GLOBAL mainRequest
#   OUTPUT: NONE
#
FUNCTION main_g()
  DEFINE wsstatus   INTEGER
  DEFINE retryAuth  INTEGER
  DEFINE retryProxy INTEGER
  DEFINE retry      INTEGER
  DEFINE request    com.HTTPRequest
  DEFINE response   com.HTTPResponse
  DEFINE writer     xml.DomDocument
  DEFINE reader     xml.DomDocument
  DEFINE envelope   xml.DomNode
  DEFINE header     xml.DomNode
  DEFINE body       xml.DomNode
  DEFINE node       xml.DomNode
 
  #
  # INIT VARIABLES
  #
  LET wsstatus = -1
  LET retryAuth = FALSE
  LET retryProxy = FALSE
  LET retry = TRUE
 
  IF cmbinfService_cmbinfLocation IS NULL THEN
    LET cmbinfService_cmbinfLocation = "http://192.168.100.161:8080/axis/cmbinf.jws"
  END IF
 
  #
  # CREATE REQUEST
  #
  TRY
    LET request = com.HTTPRequest.Create(cmbinfService_cmbinfLocation)
    CALL request.setMethod("POST")
    CALL request.setCharset("UTF-8")
    CALL request.setHeader("SOAPAction","\"\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    RETURN wsstatus
  END TRY
 
  # START LOOP
  WHILE retry
    LET retry = FALSE
 
    #
    # DOM Request
    #
 
    TRY
      # Building SOAP1.1 envelope
      LET writer = xml.DomDocument.Create()
      LET envelope = WSHelper_BuildSOAP11Envelope(writer)
      CALL writer.appendDocumentNode(envelope)
      LET body = WSHelper_BuildSOAP11Body(writer)
      CALL envelope.appendChild(body)
      CALL xml.Serializer.VariableToSoapSection5(mainRequest,body)
 
      # Send SOAP envelope
      CALL request.doXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY
 
    #
    # PROCESS RESPONSE
    #
    TRY
      LET response = request.getResponse()
 
      CASE response.getStatusCode()
 
        WHEN 500 # SOAP Fault
          #
          # DOM SOAP FAULT
          #
          LET reader = response.getXmlResponse()
          LET envelope = WSHelper_RetrieveSOAP11Envelope(reader)
          IF envelope IS NULL THEN
            EXIT CASE
          END IF
          LET header = WSHelper_CheckSOAP11Header(envelope)
          LET body = WSHelper_RetrieveSOAP11Body(envelope,header)
          IF body IS NULL THEN
            EXIT CASE
          END IF
          CALL WSHelper_CheckSOAP11Fault(body.getFirstChildElement())
 
        WHEN 200 # SOAP Result
          #
          # DOM SOAP RESPONSE
          #
          LET reader = response.getXmlResponse()
          LET envelope = WSHelper_RetrieveSOAP11Envelope(reader)
          IF envelope IS NULL THEN
            EXIT CASE
          END IF
          # Skip headers
          LET header = WSHelper_CheckSOAP11Header(envelope)
          LET body = WSHelper_RetrieveSOAP11Body(envelope,header)
          IF body IS NOT NULL THEN
            # Check message
            LET node = WSHelper_RetrieveSOAP11Message(body)
            IF node IS NOT NULL THEN
              IF node.getLocalName()!="mainResponse" OR node.getNamespaceURI()!="http://192.168.100.161:8080/axis/cmbinf.jws" THEN
                CALL WSHelper_FillSOAP11WSError("Client","Bad Response Message")
                EXIT CASE
              END IF
              LET wsstatus = 0
            END IF
          END IF
 
        WHEN 401 # HTTP Authentication
          IF retryAuth THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 401 ("||response.getStatusDescription()||")")
          ELSE
            LET retryAuth = TRUE
            LET retry = TRUE
          END IF
 
        WHEN 407 # Proxy Authentication
          IF retryProxy THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 407 ("||response.getStatusDescription()||")")
          ELSE
            LET retryProxy = TRUE
            LET retry = TRUE
          END IF
 
        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||response.getStatusCode()||" ("||response.getStatusDescription()||")")
 
      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY
 
  # END LOOP
  END WHILE
 
  RETURN wsstatus
 
END FUNCTION
 
 
FUNCTION mainRequest_g()
  DEFINE wsstatus   INTEGER
  DEFINE writer     xml.DomDocument
  DEFINE envelope   xml.DomNode
  DEFINE header     xml.DomNode
  DEFINE body       xml.DomNode
  DEFINE node       xml.DomNode
 
  #
  # CHECK PREVIOUS CALL  
  #
  IF mainHTTPReq IS NOT NULL AND mainHTTPResp IS NULL THEN
    # Request was sent but there was no response yet
    CALL WSHelper_FillSOAP11WSError("Client","Cannot issue a new request until previous response was received")
    RETURN -2 # waiting for the response
  ELSE
    IF cmbinfService_cmbinfLocation IS NULL THEN
      LET cmbinfService_cmbinfLocation = "http://192.168.100.161:8080/axis/cmbinf.jws"
    END IF
  END IF
 
  #
  # CREATE REQUEST
  #
  TRY
    LET mainHTTPReq = com.HTTPRequest.Create(cmbinfService_cmbinfLocation)
    CALL mainHTTPReq.setMethod("POST")
    CALL mainHTTPReq.setCharset("UTF-8")
    CALL mainHTTPReq.setHeader("SOAPAction","\"\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    LET mainHTTPReq = NULL
    RETURN wsstatus
  END TRY
 
    #
    # DOM Request
    #
 
    TRY
      # Building SOAP1.1 envelope
      LET writer = xml.DomDocument.Create()
      LET envelope = WSHelper_BuildSOAP11Envelope(writer)
      CALL writer.appendDocumentNode(envelope)
      LET body = WSHelper_BuildSOAP11Body(writer)
      CALL envelope.appendChild(body)
      CALL xml.Serializer.VariableToSoapSection5(mainRequest,body)
 
      # Send SOAP envelope
      CALL mainHTTPReq.doXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      LET mainHTTPReq = NULL
      RETURN wsstatus
    END TRY
 
  #
  # PROCESS RESPONSE
  #
  TRY
    LET mainHTTPResp = mainHTTPReq.getAsyncResponse()
    RETURN 0 # SUCCESS
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    LET mainHTTPReq = NULL
    RETURN wsstatus
  END TRY
END FUNCTION
 
 
FUNCTION mainResponse_g()
  DEFINE wsstatus   INTEGER
  DEFINE reader     xml.DomDocument
  DEFINE envelope   xml.DomNode
  DEFINE header     xml.DomNode
  DEFINE body       xml.DomNode
  DEFINE node       xml.DomNode
 
  LET wsstatus = -1
 
  #
  # CHECK PREVIOUS CALL  
  #
  IF mainHTTPReq IS NULL THEN
    # No request was sent
    CALL WSHelper_FillSOAP11WSError("Client","No request has been sent")
    RETURN -1
  END IF
 
  TRY
    #
    # PROCESS RESPONSE
    #
    IF mainHTTPResp IS NULL THEN
      # Still no response, try again
      LET mainHTTPResp = mainHTTPReq.getAsyncResponse()
    END IF
 
    IF mainHTTPResp IS NULL THEN
      # We got no response, still waiting for
      CALL WSHelper_FillSOAP11WSError("Client","Response was not yet received")
      RETURN -2
    END IF
 
      CASE mainHTTPResp.getStatusCode()
 
        WHEN 500 # SOAP Fault
          #
          # DOM SOAP FAULT
          #
          LET reader = mainHTTPResp.getXmlResponse()
          LET envelope = WSHelper_RetrieveSOAP11Envelope(reader)
          IF envelope IS NULL THEN
            EXIT CASE
          END IF
          LET header = WSHelper_CheckSOAP11Header(envelope)
          LET body = WSHelper_RetrieveSOAP11Body(envelope,header)
          IF body IS NULL THEN
            EXIT CASE
          END IF
          CALL WSHelper_CheckSOAP11Fault(body.getFirstChildElement())
 
        WHEN 200 # SOAP Result
          #
          # DOM SOAP RESPONSE
          #
          LET reader = mainHTTPResp.getXmlResponse()
          LET envelope = WSHelper_RetrieveSOAP11Envelope(reader)
          IF envelope IS NULL THEN
            EXIT CASE
          END IF
          # Skip headers
          LET header = WSHelper_CheckSOAP11Header(envelope)
          LET body = WSHelper_RetrieveSOAP11Body(envelope,header)
          IF body IS NOT NULL THEN
            # Check message
            LET node = WSHelper_RetrieveSOAP11Message(body)
            IF node IS NOT NULL THEN
              IF node.getLocalName()!="mainResponse" OR node.getNamespaceURI()!="http://192.168.100.161:8080/axis/cmbinf.jws" THEN
                CALL WSHelper_FillSOAP11WSError("Client","Bad Response Message")
                EXIT CASE
              END IF
              LET wsstatus = 0
            END IF
          END IF
 
        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||mainHTTPResp.getStatusCode()||" ("||mainHTTPResp.getStatusDescription()||")")
 
      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    END TRY
 
  #
  # RESET VARIABLES
  #
  LET mainHTTPReq = NULL
  LET mainHTTPResp = NULL
  RETURN wsstatus
END FUNCTION
 
 
 
#
# Operation: connect
#
 
#
# FUNCTION: connect
#
FUNCTION connect(p_loginstr, p_indata, p_sep, p_para, p_para1)
  DEFINE	soapStatus		INTEGER
  DEFINE	p_loginstr		STRING
  DEFINE	p_indata		STRING
  DEFINE	p_sep		STRING
  DEFINE	p_para		STRING
  DEFINE	p_para1		STRING
 
  LET connectRequest.loginstr = p_loginstr
  LET connectRequest.indata = p_indata
  LET connectRequest.sep = p_sep
  LET connectRequest.para = p_para
  LET connectRequest.para1 = p_para1
 
  LET soapStatus = connect_g()
 
  RETURN soapStatus, connectResponse.connectReturn
END FUNCTION
 
#
# FUNCTION: connect_g
#   RETURNING: soapStatus
#   INPUT: GLOBAL connectRequest
#   OUTPUT: GLOBAL connectResponse
#
FUNCTION connect_g()
  DEFINE wsstatus   INTEGER
  DEFINE retryAuth  INTEGER
  DEFINE retryProxy INTEGER
  DEFINE retry      INTEGER
  DEFINE request    com.HTTPRequest
  DEFINE response   com.HTTPResponse
  DEFINE writer     xml.DomDocument
  DEFINE reader     xml.DomDocument
  DEFINE envelope   xml.DomNode
  DEFINE header     xml.DomNode
  DEFINE body       xml.DomNode
  DEFINE node       xml.DomNode
 
  #
  # INIT VARIABLES
  #
  LET wsstatus = -1
  LET retryAuth = FALSE
  LET retryProxy = FALSE
  LET retry = TRUE
 
  IF cmbinfService_cmbinfLocation IS NULL THEN
    LET cmbinfService_cmbinfLocation = "http://192.168.100.161:8080/axis/cmbinf.jws"
  END IF
 
  #
  # CREATE REQUEST
  #
  TRY
    LET request = com.HTTPRequest.Create(cmbinfService_cmbinfLocation)
    CALL request.setMethod("POST")
    CALL request.setCharset("UTF-8")
    CALL request.setHeader("SOAPAction","\"\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    RETURN wsstatus
  END TRY
 
  # START LOOP
  WHILE retry
    LET retry = FALSE
 
    #
    # DOM Request
    #
 
    TRY
      # Building SOAP1.1 envelope
      LET writer = xml.DomDocument.Create()
      LET envelope = WSHelper_BuildSOAP11Envelope(writer)
      CALL writer.appendDocumentNode(envelope)
      LET body = WSHelper_BuildSOAP11Body(writer)
      CALL envelope.appendChild(body)
      CALL xml.Serializer.VariableToSoapSection5(connectRequest,body)
 
      # Send SOAP envelope
      CALL request.doXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY
 
    #
    # PROCESS RESPONSE
    #
    TRY
      LET response = request.getResponse()
 
      CASE response.getStatusCode()
 
        WHEN 500 # SOAP Fault
          #
          # DOM SOAP FAULT
          #
          LET reader = response.getXmlResponse()
          LET envelope = WSHelper_RetrieveSOAP11Envelope(reader)
          IF envelope IS NULL THEN
            EXIT CASE
          END IF
          LET header = WSHelper_CheckSOAP11Header(envelope)
          LET body = WSHelper_RetrieveSOAP11Body(envelope,header)
          IF body IS NULL THEN
            EXIT CASE
          END IF
          CALL WSHelper_CheckSOAP11Fault(body.getFirstChildElement())
 
        WHEN 200 # SOAP Result
          #
          # DOM SOAP RESPONSE
          #
          LET reader = response.getXmlResponse()
          LET envelope = WSHelper_RetrieveSOAP11Envelope(reader)
          IF envelope IS NULL THEN
            EXIT CASE
          END IF
          # Skip headers
          LET header = WSHelper_CheckSOAP11Header(envelope)
          LET body = WSHelper_RetrieveSOAP11Body(envelope,header)
          IF body IS NOT NULL THEN
            # Check message
            LET node = WSHelper_RetrieveSOAP11Message(body)
            IF node IS NOT NULL THEN
              CALL Xml.Serializer.SoapSection5ToVariable(node,connectResponse)
              LET wsstatus = 0
            END IF
          END IF
 
        WHEN 401 # HTTP Authentication
          IF retryAuth THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 401 ("||response.getStatusDescription()||")")
          ELSE
            LET retryAuth = TRUE
            LET retry = TRUE
          END IF
 
        WHEN 407 # Proxy Authentication
          IF retryProxy THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 407 ("||response.getStatusDescription()||")")
          ELSE
            LET retryProxy = TRUE
            LET retry = TRUE
          END IF
 
        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||response.getStatusCode()||" ("||response.getStatusDescription()||")")
 
      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY
 
  # END LOOP
  END WHILE
 
  RETURN wsstatus
 
END FUNCTION
 
 
FUNCTION connectRequest_g()
  DEFINE wsstatus   INTEGER
  DEFINE writer     xml.DomDocument
  DEFINE envelope   xml.DomNode
  DEFINE header     xml.DomNode
  DEFINE body       xml.DomNode
  DEFINE node       xml.DomNode
 
  #
  # CHECK PREVIOUS CALL  
  #
  IF connectHTTPReq IS NOT NULL AND connectHTTPResp IS NULL THEN
    # Request was sent but there was no response yet
    CALL WSHelper_FillSOAP11WSError("Client","Cannot issue a new request until previous response was received")
    RETURN -2 # waiting for the response
  ELSE
    IF cmbinfService_cmbinfLocation IS NULL THEN
      LET cmbinfService_cmbinfLocation = "http://192.168.100.161:8080/axis/cmbinf.jws"
    END IF
  END IF
 
  #
  # CREATE REQUEST
  #
  TRY
    LET connectHTTPReq = com.HTTPRequest.Create(cmbinfService_cmbinfLocation)
    CALL connectHTTPReq.setMethod("POST")
    CALL connectHTTPReq.setCharset("UTF-8")
    CALL connectHTTPReq.setHeader("SOAPAction","\"\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    LET connectHTTPReq = NULL
    RETURN wsstatus
  END TRY
 
    #
    # DOM Request
    #
 
    TRY
      # Building SOAP1.1 envelope
      LET writer = xml.DomDocument.Create()
      LET envelope = WSHelper_BuildSOAP11Envelope(writer)
      CALL writer.appendDocumentNode(envelope)
      LET body = WSHelper_BuildSOAP11Body(writer)
      CALL envelope.appendChild(body)
      CALL xml.Serializer.VariableToSoapSection5(connectRequest,body)
 
      # Send SOAP envelope
      CALL connectHTTPReq.doXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      LET connectHTTPReq = NULL
      RETURN wsstatus
    END TRY
 
  #
  # PROCESS RESPONSE
  #
  TRY
    LET connectHTTPResp = connectHTTPReq.getAsyncResponse()
    RETURN 0 # SUCCESS
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    LET connectHTTPReq = NULL
    RETURN wsstatus
  END TRY
END FUNCTION
 
 
FUNCTION connectResponse_g()
  DEFINE wsstatus   INTEGER
  DEFINE reader     xml.DomDocument
  DEFINE envelope   xml.DomNode
  DEFINE header     xml.DomNode
  DEFINE body       xml.DomNode
  DEFINE node       xml.DomNode
 
  LET wsstatus = -1
 
  #
  # CHECK PREVIOUS CALL  
  #
  IF connectHTTPReq IS NULL THEN
    # No request was sent
    CALL WSHelper_FillSOAP11WSError("Client","No request has been sent")
    RETURN -1
  END IF
 
  TRY
    #
    # PROCESS RESPONSE
    #
    IF connectHTTPResp IS NULL THEN
      # Still no response, try again
      LET connectHTTPResp = connectHTTPReq.getAsyncResponse()
    END IF
 
    IF connectHTTPResp IS NULL THEN
      # We got no response, still waiting for
      CALL WSHelper_FillSOAP11WSError("Client","Response was not yet received")
      RETURN -2
    END IF
 
      CASE connectHTTPResp.getStatusCode()
 
        WHEN 500 # SOAP Fault
          #
          # DOM SOAP FAULT
          #
          LET reader = connectHTTPResp.getXmlResponse()
          LET envelope = WSHelper_RetrieveSOAP11Envelope(reader)
          IF envelope IS NULL THEN
            EXIT CASE
          END IF
          LET header = WSHelper_CheckSOAP11Header(envelope)
          LET body = WSHelper_RetrieveSOAP11Body(envelope,header)
          IF body IS NULL THEN
            EXIT CASE
          END IF
          CALL WSHelper_CheckSOAP11Fault(body.getFirstChildElement())
 
        WHEN 200 # SOAP Result
          #
          # DOM SOAP RESPONSE
          #
          LET reader = connectHTTPResp.getXmlResponse()
          LET envelope = WSHelper_RetrieveSOAP11Envelope(reader)
          IF envelope IS NULL THEN
            EXIT CASE
          END IF
          # Skip headers
          LET header = WSHelper_CheckSOAP11Header(envelope)
          LET body = WSHelper_RetrieveSOAP11Body(envelope,header)
          IF body IS NOT NULL THEN
            # Check message
            LET node = WSHelper_RetrieveSOAP11Message(body)
            IF node IS NOT NULL THEN
              CALL Xml.Serializer.SoapSection5ToVariable(node,connectResponse)
              LET wsstatus = 0
            END IF
          END IF
 
        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||connectHTTPResp.getStatusCode()||" ("||connectHTTPResp.getStatusDescription()||")")
 
      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    END TRY
 
  #
  # RESET VARIABLES
  #
  LET connectHTTPReq = NULL
  LET connectHTTPResp = NULL
  RETURN wsstatus
END FUNCTION
 
 
