# Prog. Version..: '5.30.06-13.03.12(00001)'     #
#
# Pattern name...: aws_apsgw.4gl
# Descriptions...: APS 
# Date & Author..: 08/05/21 By Kevin #FUN-840179
# Modify.........: #FUN-840179
# Modify.........: No.FUN-880046 08/08/12 by Echo Genero 2.11 調整
# Modify.........: No:FUN-CC0150 12/12/28 By Mandy 傳給APS時增加傳<code9> 此碼傳legal code(法人)
 
#FUN-840179
 
IMPORT com
IMPORT xml
 
GLOBALS "../4gl/aws_apsgw.inc"
#DATABASE ds
 
#FUN-840179  #FUN-880046
#-------------------------------------------------------------------------------
# File: aws_apsgw.4gl
# GENERATED BY fglwsdl build-587.103
#-------------------------------------------------------------------------------
# Service: APeSService
# Port:    APeSServiceSoap
# Server:  http://10.40.71.108/APeSWebService/APeSService.asmx
#-------------------------------------------------------------------------------
# THIS FILE WAS GENERATED. DO NOT MODIFY.
#-------------------------------------------------------------------------------
 
DEFINE LoginHTTPReq     com.HTTPRequest
DEFINE LoginHTTPResp    com.HTTPResponse
 
DEFINE InsertCommandHTTPReq     com.HTTPRequest
DEFINE InsertCommandHTTPResp    com.HTTPResponse
 
DEFINE RunCommandHTTPReq     com.HTTPRequest
DEFINE RunCommandHTTPResp    com.HTTPResponse
 
DEFINE GetStatusHTTPReq     com.HTTPRequest
DEFINE GetStatusHTTPResp    com.HTTPResponse
 
#-------------------------------------------------------------------------------
 
#
# Operation: Aps_Login
#
 
#
# FUNCTION: Aps_Login
#
FUNCTION Aps_Login(p_user, p_password)
  DEFINE	soapStatus		INTEGER
  DEFINE	p_user		STRING
  DEFINE	p_password		STRING
 
  LET Aps_Login.user = p_user
  LET Aps_Login.password = p_password
 
  LET soapStatus = Aps_Login_g()
 
  RETURN soapStatus, Aps_LoginResponse.LoginResult
END FUNCTION
 
#
# FUNCTION: Aps_Login_g
#   RETURNING: soapStatus
#   INPUT: GLOBAL Aps_Login
#   OUTPUT: GLOBAL Aps_LoginResponse
#
FUNCTION Aps_Login_g()
  DEFINE wsstatus   INTEGER
  DEFINE retryAuth  INTEGER
  DEFINE retryProxy INTEGER
  DEFINE retry      INTEGER
  DEFINE request    com.HTTPRequest
  DEFINE response   com.HTTPResponse
  DEFINE writer     xml.StaxWriter
  DEFINE reader     xml.StaxReader
 
  #
  # INIT VARIABLES
  #
  LET wsstatus = -1
  LET retryAuth = FALSE
  LET retryProxy = FALSE
  LET retry = TRUE
 
  IF Aps_APeSService_APeSServiceSoapLocation IS NULL THEN
    LET Aps_APeSService_APeSServiceSoapLocation = "http://10.40.71.108/APeSWebService/APeSService.asmx"
  END IF
 
  #
  # CREATE REQUEST
  #
  TRY
    LET request = com.HTTPRequest.Create(Aps_APeSService_APeSServiceSoapLocation)
    CALL request.setMethod("POST")
    CALL request.setCharset("UTF-8")
    CALL request.setHeader("SOAPAction","\"http://tempuri.org/Login\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    RETURN wsstatus
  END TRY
 
  # START LOOP
  WHILE retry
    LET retry = FALSE
 
    #
    # Stax request
    #
    TRY
      LET writer = request.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(Aps_Login,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL request.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY
 
    #
    # PROCESS RESPONSE
    #
    TRY
      LET response = request.getResponse()
 
      CASE response.getStatusCode()
 
        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
 
        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,Aps_LoginResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
          LET wsstatus = 0
 
        WHEN 401 # HTTP Authentication
          IF retryAuth THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 401 ("||response.getStatusDescription()||")")
          ELSE
            LET retryAuth = TRUE
            LET retry = TRUE
          END IF
 
        WHEN 407 # Proxy Authentication
          IF retryProxy THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 407 ("||response.getStatusDescription()||")")
          ELSE
            LET retryProxy = TRUE
            LET retry = TRUE
          END IF
 
        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||response.getStatusCode()||" ("||response.getStatusDescription()||")")
 
      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY
 
  # END LOOP
  END WHILE
 
  RETURN wsstatus
 
END FUNCTION
 
 
FUNCTION Aps_LoginRequest_g()
  DEFINE wsstatus   INTEGER
  DEFINE writer     xml.StaxWriter
 
  #
  # CHECK PREVIOUS CALL  
  #
  IF LoginHTTPReq IS NOT NULL AND LoginHTTPResp IS NULL THEN
    # Request was sent but there was no response yet
    CALL WSHelper_FillSOAP11WSError("Client","Cannot issue a new request until previous response was received")
    RETURN -2 # waiting for the response
  ELSE
    IF Aps_APeSService_APeSServiceSoapLocation IS NULL THEN
      LET Aps_APeSService_APeSServiceSoapLocation = "http://10.40.71.108/APeSWebService/APeSService.asmx"
    END IF
  END IF
 
  #
  # CREATE REQUEST
  #
  TRY
    LET LoginHTTPReq = com.HTTPRequest.Create(Aps_APeSService_APeSServiceSoapLocation)
    CALL LoginHTTPReq.setMethod("POST")
    CALL LoginHTTPReq.setCharset("UTF-8")
    CALL LoginHTTPReq.setHeader("SOAPAction","\"http://tempuri.org/Login\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    LET LoginHTTPReq = NULL
    RETURN wsstatus
  END TRY
 
    #
    # Stax request
    #
    TRY
      LET writer = LoginHTTPReq.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(Aps_Login,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL LoginHTTPReq.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      LET LoginHTTPReq = NULL
      RETURN wsstatus
    END TRY
 
  #
  # PROCESS RESPONSE
  #
  TRY
    LET LoginHTTPResp = LoginHTTPReq.getAsyncResponse()
    RETURN 0 # SUCCESS
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    LET LoginHTTPReq = NULL
    RETURN wsstatus
  END TRY
END FUNCTION
 
 
FUNCTION Aps_LoginResponse_g()
  DEFINE wsstatus   INTEGER
  DEFINE reader     xml.StaxReader
 
  LET wsstatus = -1
 
  #
  # CHECK PREVIOUS CALL  
  #
  IF LoginHTTPReq IS NULL THEN
    # No request was sent
    CALL WSHelper_FillSOAP11WSError("Client","No request has been sent")
    RETURN -1
  END IF
 
  TRY
    #
    # PROCESS RESPONSE
    #
    IF LoginHTTPResp IS NULL THEN
      # Still no response, try again
      LET LoginHTTPResp = LoginHTTPReq.getAsyncResponse()
    END IF
 
    IF LoginHTTPResp IS NULL THEN
      # We got no response, still waiting for
      CALL WSHelper_FillSOAP11WSError("Client","Response was not yet received")
      RETURN -2
    END IF
 
      CASE LoginHTTPResp.getStatusCode()
 
        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = LoginHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL LoginHTTPResp.endXmlResponse(reader)
 
        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = LoginHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,Aps_LoginResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL LoginHTTPResp.endXmlResponse(reader)
          LET wsstatus = 0
 
        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||LoginHTTPResp.getStatusCode()||" ("||LoginHTTPResp.getStatusDescription()||")")
 
      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    END TRY
 
  #
  # RESET VARIABLES
  #
  LET LoginHTTPReq = NULL
  LET LoginHTTPResp = NULL
  RETURN wsstatus
END FUNCTION
 
 
 
#
# Operation: Aps_InsertCommand
#
 
#
# FUNCTION: Aps_InsertCommand
#
FUNCTION Aps_InsertCommand(p_command_id, p_code1, p_code2, p_code3, p_code4, p_code5, p_code6, p_code7, p_code8, p_code9, p_key) #FUN-CC0150 add p_code9
  DEFINE	soapStatus		INTEGER
  DEFINE	p_command_id		STRING
  DEFINE	p_code1		STRING
  DEFINE	p_code2		STRING
  DEFINE	p_code3		STRING
  DEFINE	p_code4		STRING
  DEFINE	p_code5		STRING
  DEFINE	p_code6		STRING
  DEFINE	p_code7		STRING
  DEFINE	p_code8		STRING
  DEFINE	p_code9		STRING #FUN-CC0150 add
  DEFINE	p_key		STRING
 
  LET Aps_InsertCommand.command_id = p_command_id
  LET Aps_InsertCommand.code1 = p_code1
  LET Aps_InsertCommand.code2 = p_code2
  LET Aps_InsertCommand.code3 = p_code3
  LET Aps_InsertCommand.code4 = p_code4
  LET Aps_InsertCommand.code5 = p_code5
  LET Aps_InsertCommand.code6 = p_code6
  LET Aps_InsertCommand.code7 = p_code7
  LET Aps_InsertCommand.code8 = p_code8
  LET Aps_InsertCommand.code9 = p_code9 #FUN-CC0150 add
  LET Aps_InsertCommand.key = p_key
 
  LET soapStatus = Aps_InsertCommand_g()
 
  RETURN soapStatus, Aps_InsertCommandResponse.InsertCommandResult
END FUNCTION
 
#
# FUNCTION: Aps_InsertCommand_g
#   RETURNING: soapStatus
#   INPUT: GLOBAL Aps_InsertCommand
#   OUTPUT: GLOBAL Aps_InsertCommandResponse
#
FUNCTION Aps_InsertCommand_g()
  DEFINE wsstatus   INTEGER
  DEFINE retryAuth  INTEGER
  DEFINE retryProxy INTEGER
  DEFINE retry      INTEGER
  DEFINE request    com.HTTPRequest
  DEFINE response   com.HTTPResponse
  DEFINE writer     xml.StaxWriter
  DEFINE reader     xml.StaxReader
 
  #
  # INIT VARIABLES
  #
  LET wsstatus = -1
  LET retryAuth = FALSE
  LET retryProxy = FALSE
  LET retry = TRUE
 
  IF Aps_APeSService_APeSServiceSoapLocation IS NULL THEN
    LET Aps_APeSService_APeSServiceSoapLocation = "http://10.40.71.108/APeSWebService/APeSService.asmx"
  END IF
 
  #
  # CREATE REQUEST
  #
  TRY
    LET request = com.HTTPRequest.Create(Aps_APeSService_APeSServiceSoapLocation)
    CALL request.setMethod("POST")
    CALL request.setCharset("UTF-8")
    CALL request.setHeader("SOAPAction","\"http://tempuri.org/InsertCommand\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    RETURN wsstatus
  END TRY
 
  # START LOOP
  WHILE retry
    LET retry = FALSE
 
    #
    # Stax request
    #
    TRY
      LET writer = request.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(Aps_InsertCommand,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL request.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY
 
    #
    # PROCESS RESPONSE
    #
    TRY
      LET response = request.getResponse()
 
      CASE response.getStatusCode()
 
        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
 
        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,Aps_InsertCommandResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
          LET wsstatus = 0
 
        WHEN 401 # HTTP Authentication
          IF retryAuth THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 401 ("||response.getStatusDescription()||")")
          ELSE
            LET retryAuth = TRUE
            LET retry = TRUE
          END IF
 
        WHEN 407 # Proxy Authentication
          IF retryProxy THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 407 ("||response.getStatusDescription()||")")
          ELSE
            LET retryProxy = TRUE
            LET retry = TRUE
          END IF
 
        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||response.getStatusCode()||" ("||response.getStatusDescription()||")")
 
      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY
 
  # END LOOP
  END WHILE
 
  RETURN wsstatus
 
END FUNCTION
 
 
FUNCTION Aps_InsertCommandRequest_g()
  DEFINE wsstatus   INTEGER
  DEFINE writer     xml.StaxWriter
 
  #
  # CHECK PREVIOUS CALL  
  #
  IF InsertCommandHTTPReq IS NOT NULL AND InsertCommandHTTPResp IS NULL THEN
    # Request was sent but there was no response yet
    CALL WSHelper_FillSOAP11WSError("Client","Cannot issue a new request until previous response was received")
    RETURN -2 # waiting for the response
  ELSE
    IF Aps_APeSService_APeSServiceSoapLocation IS NULL THEN
      LET Aps_APeSService_APeSServiceSoapLocation = "http://10.40.71.108/APeSWebService/APeSService.asmx"
    END IF
  END IF
 
  #
  # CREATE REQUEST
  #
  TRY
    LET InsertCommandHTTPReq = com.HTTPRequest.Create(Aps_APeSService_APeSServiceSoapLocation)
    CALL InsertCommandHTTPReq.setMethod("POST")
    CALL InsertCommandHTTPReq.setCharset("UTF-8")
    CALL InsertCommandHTTPReq.setHeader("SOAPAction","\"http://tempuri.org/InsertCommand\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    LET InsertCommandHTTPReq = NULL
    RETURN wsstatus
  END TRY
 
    #
    # Stax request
    #
    TRY
      LET writer = InsertCommandHTTPReq.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(Aps_InsertCommand,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL InsertCommandHTTPReq.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      LET InsertCommandHTTPReq = NULL
      RETURN wsstatus
    END TRY
 
  #
  # PROCESS RESPONSE
  #
  TRY
    LET InsertCommandHTTPResp = InsertCommandHTTPReq.getAsyncResponse()
    RETURN 0 # SUCCESS
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    LET InsertCommandHTTPReq = NULL
    RETURN wsstatus
  END TRY
END FUNCTION
 
 
FUNCTION Aps_InsertCommandResponse_g()
  DEFINE wsstatus   INTEGER
  DEFINE reader     xml.StaxReader
 
  LET wsstatus = -1
 
  #
  # CHECK PREVIOUS CALL  
  #
  IF InsertCommandHTTPReq IS NULL THEN
    # No request was sent
    CALL WSHelper_FillSOAP11WSError("Client","No request has been sent")
    RETURN -1
  END IF
 
  TRY
    #
    # PROCESS RESPONSE
    #
    IF InsertCommandHTTPResp IS NULL THEN
      # Still no response, try again
      LET InsertCommandHTTPResp = InsertCommandHTTPReq.getAsyncResponse()
    END IF
 
    IF InsertCommandHTTPResp IS NULL THEN
      # We got no response, still waiting for
      CALL WSHelper_FillSOAP11WSError("Client","Response was not yet received")
      RETURN -2
    END IF
 
      CASE InsertCommandHTTPResp.getStatusCode()
 
        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = InsertCommandHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL InsertCommandHTTPResp.endXmlResponse(reader)
 
        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = InsertCommandHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,Aps_InsertCommandResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL InsertCommandHTTPResp.endXmlResponse(reader)
          LET wsstatus = 0
 
        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||InsertCommandHTTPResp.getStatusCode()||" ("||InsertCommandHTTPResp.getStatusDescription()||")")
 
      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    END TRY
 
  #
  # RESET VARIABLES
  #
  LET InsertCommandHTTPReq = NULL
  LET InsertCommandHTTPResp = NULL
  RETURN wsstatus
END FUNCTION
 
 
 
#
# Operation: Aps_RunCommand
#
 
#
# FUNCTION: Aps_RunCommand
#
FUNCTION Aps_RunCommand(p_key)
  DEFINE	soapStatus		INTEGER
  DEFINE	p_key		STRING
 
  LET Aps_RunCommand.key = p_key
 
  LET soapStatus = Aps_RunCommand_g()
 
  RETURN soapStatus, Aps_RunCommandResponse.RunCommandResult
END FUNCTION
 
#
# FUNCTION: Aps_RunCommand_g
#   RETURNING: soapStatus
#   INPUT: GLOBAL Aps_RunCommand
#   OUTPUT: GLOBAL Aps_RunCommandResponse
#
FUNCTION Aps_RunCommand_g()
  DEFINE wsstatus   INTEGER
  DEFINE retryAuth  INTEGER
  DEFINE retryProxy INTEGER
  DEFINE retry      INTEGER
  DEFINE request    com.HTTPRequest
  DEFINE response   com.HTTPResponse
  DEFINE writer     xml.StaxWriter
  DEFINE reader     xml.StaxReader
 
  #
  # INIT VARIABLES
  #
  LET wsstatus = -1
  LET retryAuth = FALSE
  LET retryProxy = FALSE
  LET retry = TRUE
 
  IF Aps_APeSService_APeSServiceSoapLocation IS NULL THEN
    LET Aps_APeSService_APeSServiceSoapLocation = "http://10.40.71.108/APeSWebService/APeSService.asmx"
  END IF
 
  #
  # CREATE REQUEST
  #
  TRY
    LET request = com.HTTPRequest.Create(Aps_APeSService_APeSServiceSoapLocation)
    CALL request.setMethod("POST")
    CALL request.setCharset("UTF-8")
    CALL request.setHeader("SOAPAction","\"http://tempuri.org/RunCommand\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    RETURN wsstatus
  END TRY
 
  # START LOOP
  WHILE retry
    LET retry = FALSE
 
    #
    # Stax request
    #
    TRY
      LET writer = request.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(Aps_RunCommand,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL request.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY
 
    #
    # PROCESS RESPONSE
    #
    TRY
      LET response = request.getResponse()
 
      CASE response.getStatusCode()
 
        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
 
        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,Aps_RunCommandResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
          LET wsstatus = 0
 
        WHEN 401 # HTTP Authentication
          IF retryAuth THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 401 ("||response.getStatusDescription()||")")
          ELSE
            LET retryAuth = TRUE
            LET retry = TRUE
          END IF
 
        WHEN 407 # Proxy Authentication
          IF retryProxy THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 407 ("||response.getStatusDescription()||")")
          ELSE
            LET retryProxy = TRUE
            LET retry = TRUE
          END IF
 
        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||response.getStatusCode()||" ("||response.getStatusDescription()||")")
 
      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY
 
  # END LOOP
  END WHILE
 
  RETURN wsstatus
 
END FUNCTION
 
 
FUNCTION Aps_RunCommandRequest_g()
  DEFINE wsstatus   INTEGER
  DEFINE writer     xml.StaxWriter
 
  #
  # CHECK PREVIOUS CALL  
  #
  IF RunCommandHTTPReq IS NOT NULL AND RunCommandHTTPResp IS NULL THEN
    # Request was sent but there was no response yet
    CALL WSHelper_FillSOAP11WSError("Client","Cannot issue a new request until previous response was received")
    RETURN -2 # waiting for the response
  ELSE
    IF Aps_APeSService_APeSServiceSoapLocation IS NULL THEN
      LET Aps_APeSService_APeSServiceSoapLocation = "http://10.40.71.108/APeSWebService/APeSService.asmx"
    END IF
  END IF
 
  #
  # CREATE REQUEST
  #
  TRY
    LET RunCommandHTTPReq = com.HTTPRequest.Create(Aps_APeSService_APeSServiceSoapLocation)
    CALL RunCommandHTTPReq.setMethod("POST")
    CALL RunCommandHTTPReq.setCharset("UTF-8")
    CALL RunCommandHTTPReq.setHeader("SOAPAction","\"http://tempuri.org/RunCommand\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    LET RunCommandHTTPReq = NULL
    RETURN wsstatus
  END TRY
 
    #
    # Stax request
    #
    TRY
      LET writer = RunCommandHTTPReq.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(Aps_RunCommand,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL RunCommandHTTPReq.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      LET RunCommandHTTPReq = NULL
      RETURN wsstatus
    END TRY
 
  #
  # PROCESS RESPONSE
  #
  TRY
    LET RunCommandHTTPResp = RunCommandHTTPReq.getAsyncResponse()
    RETURN 0 # SUCCESS
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    LET RunCommandHTTPReq = NULL
    RETURN wsstatus
  END TRY
END FUNCTION
 
 
FUNCTION Aps_RunCommandResponse_g()
  DEFINE wsstatus   INTEGER
  DEFINE reader     xml.StaxReader
 
  LET wsstatus = -1
 
  #
  # CHECK PREVIOUS CALL  
  #
  IF RunCommandHTTPReq IS NULL THEN
    # No request was sent
    CALL WSHelper_FillSOAP11WSError("Client","No request has been sent")
    RETURN -1
  END IF
 
  TRY
    #
    # PROCESS RESPONSE
    #
    IF RunCommandHTTPResp IS NULL THEN
      # Still no response, try again
      LET RunCommandHTTPResp = RunCommandHTTPReq.getAsyncResponse()
    END IF
 
    IF RunCommandHTTPResp IS NULL THEN
      # We got no response, still waiting for
      CALL WSHelper_FillSOAP11WSError("Client","Response was not yet received")
      RETURN -2
    END IF
 
      CASE RunCommandHTTPResp.getStatusCode()
 
        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = RunCommandHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL RunCommandHTTPResp.endXmlResponse(reader)
 
        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = RunCommandHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,Aps_RunCommandResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL RunCommandHTTPResp.endXmlResponse(reader)
          LET wsstatus = 0
 
        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||RunCommandHTTPResp.getStatusCode()||" ("||RunCommandHTTPResp.getStatusDescription()||")")
 
      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    END TRY
 
  #
  # RESET VARIABLES
  #
  LET RunCommandHTTPReq = NULL
  LET RunCommandHTTPResp = NULL
  RETURN wsstatus
END FUNCTION
 
 
 
#
# Operation: Aps_GetStatus
#
 
#
# FUNCTION: Aps_GetStatus
#
FUNCTION Aps_GetStatus(p_serial_id, p_key)
  DEFINE	soapStatus		INTEGER
  DEFINE	p_serial_id		STRING
  DEFINE	p_key		STRING
 
  LET Aps_GetStatus.serial_id = p_serial_id
  LET Aps_GetStatus.key = p_key
 
  LET soapStatus = Aps_GetStatus_g()
 
  RETURN soapStatus, Aps_GetStatusResponse.GetStatusResult
END FUNCTION
 
#
# FUNCTION: Aps_GetStatus_g
#   RETURNING: soapStatus
#   INPUT: GLOBAL Aps_GetStatus
#   OUTPUT: GLOBAL Aps_GetStatusResponse
#
FUNCTION Aps_GetStatus_g()
  DEFINE wsstatus   INTEGER
  DEFINE retryAuth  INTEGER
  DEFINE retryProxy INTEGER
  DEFINE retry      INTEGER
  DEFINE request    com.HTTPRequest
  DEFINE response   com.HTTPResponse
  DEFINE writer     xml.StaxWriter
  DEFINE reader     xml.StaxReader
 
  #
  # INIT VARIABLES
  #
  LET wsstatus = -1
  LET retryAuth = FALSE
  LET retryProxy = FALSE
  LET retry = TRUE
 
  IF Aps_APeSService_APeSServiceSoapLocation IS NULL THEN
    LET Aps_APeSService_APeSServiceSoapLocation = "http://10.40.71.108/APeSWebService/APeSService.asmx"
  END IF
 
  #
  # CREATE REQUEST
  #
  TRY
    LET request = com.HTTPRequest.Create(Aps_APeSService_APeSServiceSoapLocation)
    CALL request.setMethod("POST")
    CALL request.setCharset("UTF-8")
    CALL request.setHeader("SOAPAction","\"http://tempuri.org/GetStatus\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    RETURN wsstatus
  END TRY
 
  # START LOOP
  WHILE retry
    LET retry = FALSE
 
    #
    # Stax request
    #
    TRY
      LET writer = request.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(Aps_GetStatus,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL request.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY
 
    #
    # PROCESS RESPONSE
    #
    TRY
      LET response = request.getResponse()
 
      CASE response.getStatusCode()
 
        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
 
        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,Aps_GetStatusResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
          LET wsstatus = 0
 
        WHEN 401 # HTTP Authentication
          IF retryAuth THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 401 ("||response.getStatusDescription()||")")
          ELSE
            LET retryAuth = TRUE
            LET retry = TRUE
          END IF
 
        WHEN 407 # Proxy Authentication
          IF retryProxy THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 407 ("||response.getStatusDescription()||")")
          ELSE
            LET retryProxy = TRUE
            LET retry = TRUE
          END IF
 
        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||response.getStatusCode()||" ("||response.getStatusDescription()||")")
 
      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY
 
  # END LOOP
  END WHILE
 
  RETURN wsstatus
 
END FUNCTION
 
 
FUNCTION Aps_GetStatusRequest_g()
  DEFINE wsstatus   INTEGER
  DEFINE writer     xml.StaxWriter
 
  #
  # CHECK PREVIOUS CALL  
  #
  IF GetStatusHTTPReq IS NOT NULL AND GetStatusHTTPResp IS NULL THEN
    # Request was sent but there was no response yet
    CALL WSHelper_FillSOAP11WSError("Client","Cannot issue a new request until previous response was received")
    RETURN -2 # waiting for the response
  ELSE
    IF Aps_APeSService_APeSServiceSoapLocation IS NULL THEN
      LET Aps_APeSService_APeSServiceSoapLocation = "http://10.40.71.108/APeSWebService/APeSService.asmx"
    END IF
  END IF
 
  #
  # CREATE REQUEST
  #
  TRY
    LET GetStatusHTTPReq = com.HTTPRequest.Create(Aps_APeSService_APeSServiceSoapLocation)
    CALL GetStatusHTTPReq.setMethod("POST")
    CALL GetStatusHTTPReq.setCharset("UTF-8")
    CALL GetStatusHTTPReq.setHeader("SOAPAction","\"http://tempuri.org/GetStatus\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    LET GetStatusHTTPReq = NULL
    RETURN wsstatus
  END TRY
 
    #
    # Stax request
    #
    TRY
      LET writer = GetStatusHTTPReq.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(Aps_GetStatus,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL GetStatusHTTPReq.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      LET GetStatusHTTPReq = NULL
      RETURN wsstatus
    END TRY
 
  #
  # PROCESS RESPONSE
  #
  TRY
    LET GetStatusHTTPResp = GetStatusHTTPReq.getAsyncResponse()
    RETURN 0 # SUCCESS
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    LET GetStatusHTTPReq = NULL
    RETURN wsstatus
  END TRY
END FUNCTION
 
 
FUNCTION Aps_GetStatusResponse_g()
  DEFINE wsstatus   INTEGER
  DEFINE reader     xml.StaxReader
 
  LET wsstatus = -1
 
  #
  # CHECK PREVIOUS CALL  
  #
  IF GetStatusHTTPReq IS NULL THEN
    # No request was sent
    CALL WSHelper_FillSOAP11WSError("Client","No request has been sent")
    RETURN -1
  END IF
 
  TRY
    #
    # PROCESS RESPONSE
    #
    IF GetStatusHTTPResp IS NULL THEN
      # Still no response, try again
      LET GetStatusHTTPResp = GetStatusHTTPReq.getAsyncResponse()
    END IF
 
    IF GetStatusHTTPResp IS NULL THEN
      # We got no response, still waiting for
      CALL WSHelper_FillSOAP11WSError("Client","Response was not yet received")
      RETURN -2
    END IF
 
      CASE GetStatusHTTPResp.getStatusCode()
 
        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = GetStatusHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL GetStatusHTTPResp.endXmlResponse(reader)
 
        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = GetStatusHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,Aps_GetStatusResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL GetStatusHTTPResp.endXmlResponse(reader)
          LET wsstatus = 0
 
        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||GetStatusHTTPResp.getStatusCode()||" ("||GetStatusHTTPResp.getStatusDescription()||")")
 
      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    END TRY
 
  #
  # RESET VARIABLES
  #
  LET GetStatusHTTPReq = NULL
  LET GetStatusHTTPResp = NULL
  RETURN wsstatus
END FUNCTION
 
 
