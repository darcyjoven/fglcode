# Prog. Version..: '5.30.06-13.03.12(00003)'     #
#
# Library name...: aws_crmgw.4gl
# Descriptions...: CRM Web Service Server
# Input parameter:
# Return code....:
# Usage .........:
# Date & Author..: No.FUN-BC0065 11/01/16 By Abby 
#-------------------------------------------------------------------------------
# File: aws_crmgw.4gl
# GENERATED BY fglwsdl 101601
#-------------------------------------------------------------------------------
# THIS FILE WAS GENERATED. DO NOT MODIFY.
#-------------------------------------------------------------------------------

#FUN-BC0065
#DATABASE ds
#FUN-BC0065

IMPORT FGL WSHelper
IMPORT com
IMPORT xml


GLOBALS "../4gl/aws_crmgw.inc"



#-------------------------------------------------------------------------------
# Service: ICRMForTIPTOPWS
# Port:    ICRMForTIPTOPWSSoap
# Server:  http://10.40.40.232/WebCRM71_Develop/WebService/ICRMForTIPTOPWS/ICRMForTIPTOPWS.asmx
#-------------------------------------------------------------------------------

PRIVATE DEFINE CheckDeleteOrVoidMISCIssueDataHTTPReq     com.HTTPRequest
PRIVATE DEFINE CheckDeleteOrVoidMISCIssueDataHTTPResp    com.HTTPResponse

PRIVATE DEFINE DeleteOrVoidSuccessForRepairHTTPReq     com.HTTPRequest
PRIVATE DEFINE DeleteOrVoidSuccessForRepairHTTPResp    com.HTTPResponse

PRIVATE DEFINE UpdateStopTransactionDateHTTPReq     com.HTTPRequest
PRIVATE DEFINE UpdateStopTransactionDateHTTPResp    com.HTTPResponse

PRIVATE DEFINE RemoveStopTransactionDateHTTPReq     com.HTTPRequest
PRIVATE DEFINE RemoveStopTransactionDateHTTPResp    com.HTTPResponse

#-------------------------------------------------------------------------------

#
# Operation: crmService_CheckDeleteOrVoidMISCIssueData
#

#
# FUNCTION: crmService_CheckDeleteOrVoidMISCIssueData
#
FUNCTION crmService_CheckDeleteOrVoidMISCIssueData(p_InputData)
  DEFINE	soapStatus		INTEGER
  DEFINE	p_InputData		STRING

  LET crmService_CheckDeleteOrVoidMISCIssueData.InputData = p_InputData

  LET soapStatus = crmService_CheckDeleteOrVoidMISCIssueData_g()

  RETURN soapStatus, crmService_CheckDeleteOrVoidMISCIssueDataResponse.CheckDeleteOrVoidMISCIssueDataResult
END FUNCTION

#
# FUNCTION: crmService_CheckDeleteOrVoidMISCIssueData_g
#   RETURNING: soapStatus
#   INPUT: GLOBAL crmService_CheckDeleteOrVoidMISCIssueData
#   OUTPUT: GLOBAL crmService_CheckDeleteOrVoidMISCIssueDataResponse
#
FUNCTION crmService_CheckDeleteOrVoidMISCIssueData_g()
  DEFINE wsstatus   INTEGER
  DEFINE retryAuth  INTEGER
  DEFINE retryProxy INTEGER
  DEFINE retry      INTEGER
  DEFINE request    com.HTTPRequest
  DEFINE response   com.HTTPResponse
  DEFINE writer     xml.StaxWriter
  DEFINE reader     xml.StaxReader

  #
  # INIT VARIABLES
  #
  LET wsstatus = -1
  LET retryAuth = FALSE
  LET retryProxy = FALSE
  LET retry = TRUE

  IF crmService_ICRMForTIPTOPWS_ICRMForTIPTOPWSSoapLocation IS NULL THEN
    LET crmService_ICRMForTIPTOPWS_ICRMForTIPTOPWSSoapLocation = "http://10.40.40.232/WebCRM71_Develop/WebService/ICRMForTIPTOPWS/ICRMForTIPTOPWS.asmx"
  END IF

  #
  # CREATE REQUEST
  #
  TRY
    LET request = com.HTTPRequest.Create(crmService_ICRMForTIPTOPWS_ICRMForTIPTOPWSSoapLocation)
    CALL request.setMethod("POST")
    CALL request.setCharset("UTF-8")
    CALL request.setHeader("SOAPAction","\"http://www.dsc.com.tw/CRM/ICRMForTIPTOPWS/CheckDeleteOrVoidMISCIssueData\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    RETURN wsstatus
  END TRY

  # START LOOP
  WHILE retry
    LET retry = FALSE

    #
    # Stax request
    #
    TRY
      LET writer = request.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(crmService_CheckDeleteOrVoidMISCIssueData,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL request.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY

    #
    # PROCESS RESPONSE
    #
    TRY
      LET response = request.getResponse()

      CASE response.getStatusCode()

        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)

        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,crmService_CheckDeleteOrVoidMISCIssueDataResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
          LET wsstatus = 0

        WHEN 401 # HTTP Authentication
          IF retryAuth THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 401 ("||response.getStatusDescription()||")")
          ELSE
            LET retryAuth = TRUE
            LET retry = TRUE
          END IF

        WHEN 407 # Proxy Authentication
          IF retryProxy THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 407 ("||response.getStatusDescription()||")")
          ELSE
            LET retryProxy = TRUE
            LET retry = TRUE
          END IF

        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||response.getStatusCode()||" ("||response.getStatusDescription()||")")

      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY

  # END LOOP
  END WHILE

  RETURN wsstatus

END FUNCTION


FUNCTION crmService_CheckDeleteOrVoidMISCIssueDataRequest_g()
  DEFINE wsstatus   INTEGER
  DEFINE writer     xml.StaxWriter

  #
  # CHECK PREVIOUS CALL  
  #
  IF CheckDeleteOrVoidMISCIssueDataHTTPReq IS NOT NULL AND CheckDeleteOrVoidMISCIssueDataHTTPResp IS NULL THEN
    # Request was sent but there was no response yet
    CALL WSHelper_FillSOAP11WSError("Client","Cannot issue a new request until previous response was received")
    RETURN -2 # waiting for the response
  ELSE
    IF crmService_ICRMForTIPTOPWS_ICRMForTIPTOPWSSoapLocation IS NULL THEN
      LET crmService_ICRMForTIPTOPWS_ICRMForTIPTOPWSSoapLocation = "http://10.40.40.232/WebCRM71_Develop/WebService/ICRMForTIPTOPWS/ICRMForTIPTOPWS.asmx"
    END IF
  END IF

  #
  # CREATE REQUEST
  #
  TRY
    LET CheckDeleteOrVoidMISCIssueDataHTTPReq = com.HTTPRequest.Create(crmService_ICRMForTIPTOPWS_ICRMForTIPTOPWSSoapLocation)
    CALL CheckDeleteOrVoidMISCIssueDataHTTPReq.setMethod("POST")
    CALL CheckDeleteOrVoidMISCIssueDataHTTPReq.setCharset("UTF-8")
    CALL CheckDeleteOrVoidMISCIssueDataHTTPReq.setHeader("SOAPAction","\"http://www.dsc.com.tw/CRM/ICRMForTIPTOPWS/CheckDeleteOrVoidMISCIssueData\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    LET CheckDeleteOrVoidMISCIssueDataHTTPReq = NULL
    RETURN wsstatus
  END TRY

    #
    # Stax request
    #
    TRY
      LET writer = CheckDeleteOrVoidMISCIssueDataHTTPReq.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(crmService_CheckDeleteOrVoidMISCIssueData,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL CheckDeleteOrVoidMISCIssueDataHTTPReq.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      LET CheckDeleteOrVoidMISCIssueDataHTTPReq = NULL
      RETURN wsstatus
    END TRY

  #
  # PROCESS RESPONSE
  #
  TRY
    LET CheckDeleteOrVoidMISCIssueDataHTTPResp = CheckDeleteOrVoidMISCIssueDataHTTPReq.getAsyncResponse()
    RETURN 0 # SUCCESS
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    LET CheckDeleteOrVoidMISCIssueDataHTTPReq = NULL
    RETURN wsstatus
  END TRY
END FUNCTION


FUNCTION crmService_CheckDeleteOrVoidMISCIssueDataResponse_g()
  DEFINE wsstatus   INTEGER
  DEFINE reader     xml.StaxReader

  LET wsstatus = -1

  #
  # CHECK PREVIOUS CALL  
  #
  IF CheckDeleteOrVoidMISCIssueDataHTTPReq IS NULL THEN
    # No request was sent
    CALL WSHelper_FillSOAP11WSError("Client","No request has been sent")
    RETURN -1
  END IF

  TRY
    #
    # PROCESS RESPONSE
    #
    IF CheckDeleteOrVoidMISCIssueDataHTTPResp IS NULL THEN
      # Still no response, try again
      LET CheckDeleteOrVoidMISCIssueDataHTTPResp = CheckDeleteOrVoidMISCIssueDataHTTPReq.getAsyncResponse()
    END IF

    IF CheckDeleteOrVoidMISCIssueDataHTTPResp IS NULL THEN
      # We got no response, still waiting for
      CALL WSHelper_FillSOAP11WSError("Client","Response was not yet received")
      RETURN -2
    END IF

      CASE CheckDeleteOrVoidMISCIssueDataHTTPResp.getStatusCode()

        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = CheckDeleteOrVoidMISCIssueDataHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL CheckDeleteOrVoidMISCIssueDataHTTPResp.endXmlResponse(reader)

        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = CheckDeleteOrVoidMISCIssueDataHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,crmService_CheckDeleteOrVoidMISCIssueDataResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL CheckDeleteOrVoidMISCIssueDataHTTPResp.endXmlResponse(reader)
          LET wsstatus = 0

        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||CheckDeleteOrVoidMISCIssueDataHTTPResp.getStatusCode()||" ("||CheckDeleteOrVoidMISCIssueDataHTTPResp.getStatusDescription()||")")

      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    END TRY

  #
  # RESET VARIABLES
  #
  LET CheckDeleteOrVoidMISCIssueDataHTTPReq = NULL
  LET CheckDeleteOrVoidMISCIssueDataHTTPResp = NULL
  RETURN wsstatus
END FUNCTION



#
# Operation: crmService_DeleteOrVoidSuccessForRepair
#

#
# FUNCTION: crmService_DeleteOrVoidSuccessForRepair
#
FUNCTION crmService_DeleteOrVoidSuccessForRepair(p_InputData)
  DEFINE	soapStatus		INTEGER
  DEFINE	p_InputData		STRING

  LET crmService_DeleteOrVoidSuccessForRepair.InputData = p_InputData

  LET soapStatus = crmService_DeleteOrVoidSuccessForRepair_g()

  RETURN soapStatus, crmService_DeleteOrVoidSuccessForRepairResponse.DeleteOrVoidSuccessForRepairResult
END FUNCTION

#
# FUNCTION: crmService_DeleteOrVoidSuccessForRepair_g
#   RETURNING: soapStatus
#   INPUT: GLOBAL crmService_DeleteOrVoidSuccessForRepair
#   OUTPUT: GLOBAL crmService_DeleteOrVoidSuccessForRepairResponse
#
FUNCTION crmService_DeleteOrVoidSuccessForRepair_g()
  DEFINE wsstatus   INTEGER
  DEFINE retryAuth  INTEGER
  DEFINE retryProxy INTEGER
  DEFINE retry      INTEGER
  DEFINE request    com.HTTPRequest
  DEFINE response   com.HTTPResponse
  DEFINE writer     xml.StaxWriter
  DEFINE reader     xml.StaxReader

  #
  # INIT VARIABLES
  #
  LET wsstatus = -1
  LET retryAuth = FALSE
  LET retryProxy = FALSE
  LET retry = TRUE

  IF crmService_ICRMForTIPTOPWS_ICRMForTIPTOPWSSoapLocation IS NULL THEN
    LET crmService_ICRMForTIPTOPWS_ICRMForTIPTOPWSSoapLocation = "http://10.40.40.232/WebCRM71_Develop/WebService/ICRMForTIPTOPWS/ICRMForTIPTOPWS.asmx"
  END IF

  #
  # CREATE REQUEST
  #
  TRY
    LET request = com.HTTPRequest.Create(crmService_ICRMForTIPTOPWS_ICRMForTIPTOPWSSoapLocation)
    CALL request.setMethod("POST")
    CALL request.setCharset("UTF-8")
    CALL request.setHeader("SOAPAction","\"http://www.dsc.com.tw/CRM/ICRMForTIPTOPWS/DeleteOrVoidSuccessForRepair\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    RETURN wsstatus
  END TRY

  # START LOOP
  WHILE retry
    LET retry = FALSE

    #
    # Stax request
    #
    TRY
      LET writer = request.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(crmService_DeleteOrVoidSuccessForRepair,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL request.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY

    #
    # PROCESS RESPONSE
    #
    TRY
      LET response = request.getResponse()

      CASE response.getStatusCode()

        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)

        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,crmService_DeleteOrVoidSuccessForRepairResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
          LET wsstatus = 0

        WHEN 401 # HTTP Authentication
          IF retryAuth THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 401 ("||response.getStatusDescription()||")")
          ELSE
            LET retryAuth = TRUE
            LET retry = TRUE
          END IF

        WHEN 407 # Proxy Authentication
          IF retryProxy THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 407 ("||response.getStatusDescription()||")")
          ELSE
            LET retryProxy = TRUE
            LET retry = TRUE
          END IF

        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||response.getStatusCode()||" ("||response.getStatusDescription()||")")

      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY

  # END LOOP
  END WHILE

  RETURN wsstatus

END FUNCTION


FUNCTION crmService_DeleteOrVoidSuccessForRepairRequest_g()
  DEFINE wsstatus   INTEGER
  DEFINE writer     xml.StaxWriter

  #
  # CHECK PREVIOUS CALL  
  #
  IF DeleteOrVoidSuccessForRepairHTTPReq IS NOT NULL AND DeleteOrVoidSuccessForRepairHTTPResp IS NULL THEN
    # Request was sent but there was no response yet
    CALL WSHelper_FillSOAP11WSError("Client","Cannot issue a new request until previous response was received")
    RETURN -2 # waiting for the response
  ELSE
    IF crmService_ICRMForTIPTOPWS_ICRMForTIPTOPWSSoapLocation IS NULL THEN
      LET crmService_ICRMForTIPTOPWS_ICRMForTIPTOPWSSoapLocation = "http://10.40.40.232/WebCRM71_Develop/WebService/ICRMForTIPTOPWS/ICRMForTIPTOPWS.asmx"
    END IF
  END IF

  #
  # CREATE REQUEST
  #
  TRY
    LET DeleteOrVoidSuccessForRepairHTTPReq = com.HTTPRequest.Create(crmService_ICRMForTIPTOPWS_ICRMForTIPTOPWSSoapLocation)
    CALL DeleteOrVoidSuccessForRepairHTTPReq.setMethod("POST")
    CALL DeleteOrVoidSuccessForRepairHTTPReq.setCharset("UTF-8")
    CALL DeleteOrVoidSuccessForRepairHTTPReq.setHeader("SOAPAction","\"http://www.dsc.com.tw/CRM/ICRMForTIPTOPWS/DeleteOrVoidSuccessForRepair\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    LET DeleteOrVoidSuccessForRepairHTTPReq = NULL
    RETURN wsstatus
  END TRY

    #
    # Stax request
    #
    TRY
      LET writer = DeleteOrVoidSuccessForRepairHTTPReq.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(crmService_DeleteOrVoidSuccessForRepair,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL DeleteOrVoidSuccessForRepairHTTPReq.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      LET DeleteOrVoidSuccessForRepairHTTPReq = NULL
      RETURN wsstatus
    END TRY

  #
  # PROCESS RESPONSE
  #
  TRY
    LET DeleteOrVoidSuccessForRepairHTTPResp = DeleteOrVoidSuccessForRepairHTTPReq.getAsyncResponse()
    RETURN 0 # SUCCESS
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    LET DeleteOrVoidSuccessForRepairHTTPReq = NULL
    RETURN wsstatus
  END TRY
END FUNCTION


FUNCTION crmService_DeleteOrVoidSuccessForRepairResponse_g()
  DEFINE wsstatus   INTEGER
  DEFINE reader     xml.StaxReader

  LET wsstatus = -1

  #
  # CHECK PREVIOUS CALL  
  #
  IF DeleteOrVoidSuccessForRepairHTTPReq IS NULL THEN
    # No request was sent
    CALL WSHelper_FillSOAP11WSError("Client","No request has been sent")
    RETURN -1
  END IF

  TRY
    #
    # PROCESS RESPONSE
    #
    IF DeleteOrVoidSuccessForRepairHTTPResp IS NULL THEN
      # Still no response, try again
      LET DeleteOrVoidSuccessForRepairHTTPResp = DeleteOrVoidSuccessForRepairHTTPReq.getAsyncResponse()
    END IF

    IF DeleteOrVoidSuccessForRepairHTTPResp IS NULL THEN
      # We got no response, still waiting for
      CALL WSHelper_FillSOAP11WSError("Client","Response was not yet received")
      RETURN -2
    END IF

      CASE DeleteOrVoidSuccessForRepairHTTPResp.getStatusCode()

        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = DeleteOrVoidSuccessForRepairHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL DeleteOrVoidSuccessForRepairHTTPResp.endXmlResponse(reader)

        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = DeleteOrVoidSuccessForRepairHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,crmService_DeleteOrVoidSuccessForRepairResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL DeleteOrVoidSuccessForRepairHTTPResp.endXmlResponse(reader)
          LET wsstatus = 0

        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||DeleteOrVoidSuccessForRepairHTTPResp.getStatusCode()||" ("||DeleteOrVoidSuccessForRepairHTTPResp.getStatusDescription()||")")

      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    END TRY

  #
  # RESET VARIABLES
  #
  LET DeleteOrVoidSuccessForRepairHTTPReq = NULL
  LET DeleteOrVoidSuccessForRepairHTTPResp = NULL
  RETURN wsstatus
END FUNCTION



#
# Operation: crmService_UpdateStopTransactionDate
#

#
# FUNCTION: crmService_UpdateStopTransactionDate
#
FUNCTION crmService_UpdateStopTransactionDate(p_InputData)
  DEFINE	soapStatus		INTEGER
  DEFINE	p_InputData		STRING

  LET crmService_UpdateStopTransactionDate.InputData = p_InputData

  LET soapStatus = crmService_UpdateStopTransactionDate_g()

  RETURN soapStatus, crmService_UpdateStopTransactionDateResponse.UpdateStopTransactionDateResult
END FUNCTION

#
# FUNCTION: crmService_UpdateStopTransactionDate_g
#   RETURNING: soapStatus
#   INPUT: GLOBAL crmService_UpdateStopTransactionDate
#   OUTPUT: GLOBAL crmService_UpdateStopTransactionDateResponse
#
FUNCTION crmService_UpdateStopTransactionDate_g()
  DEFINE wsstatus   INTEGER
  DEFINE retryAuth  INTEGER
  DEFINE retryProxy INTEGER
  DEFINE retry      INTEGER
  DEFINE request    com.HTTPRequest
  DEFINE response   com.HTTPResponse
  DEFINE writer     xml.StaxWriter
  DEFINE reader     xml.StaxReader

  #
  # INIT VARIABLES
  #
  LET wsstatus = -1
  LET retryAuth = FALSE
  LET retryProxy = FALSE
  LET retry = TRUE

  IF crmService_ICRMForTIPTOPWS_ICRMForTIPTOPWSSoapLocation IS NULL THEN
    LET crmService_ICRMForTIPTOPWS_ICRMForTIPTOPWSSoapLocation = "http://10.40.40.232/WebCRM71_Develop/WebService/ICRMForTIPTOPWS/ICRMForTIPTOPWS.asmx"
  END IF

  #
  # CREATE REQUEST
  #
  TRY
    LET request = com.HTTPRequest.Create(crmService_ICRMForTIPTOPWS_ICRMForTIPTOPWSSoapLocation)
    CALL request.setMethod("POST")
    CALL request.setCharset("UTF-8")
    CALL request.setHeader("SOAPAction","\"http://www.dsc.com.tw/CRM/ICRMForTIPTOPWS/UpdateStopTransactionDate\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    RETURN wsstatus
  END TRY

  # START LOOP
  WHILE retry
    LET retry = FALSE

    #
    # Stax request
    #
    TRY
      LET writer = request.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(crmService_UpdateStopTransactionDate,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL request.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY

    #
    # PROCESS RESPONSE
    #
    TRY
      LET response = request.getResponse()

      CASE response.getStatusCode()

        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)

        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,crmService_UpdateStopTransactionDateResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
          LET wsstatus = 0

        WHEN 401 # HTTP Authentication
          IF retryAuth THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 401 ("||response.getStatusDescription()||")")
          ELSE
            LET retryAuth = TRUE
            LET retry = TRUE
          END IF

        WHEN 407 # Proxy Authentication
          IF retryProxy THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 407 ("||response.getStatusDescription()||")")
          ELSE
            LET retryProxy = TRUE
            LET retry = TRUE
          END IF

        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||response.getStatusCode()||" ("||response.getStatusDescription()||")")

      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY

  # END LOOP
  END WHILE

  RETURN wsstatus

END FUNCTION


FUNCTION crmService_UpdateStopTransactionDateRequest_g()
  DEFINE wsstatus   INTEGER
  DEFINE writer     xml.StaxWriter

  #
  # CHECK PREVIOUS CALL  
  #
  IF UpdateStopTransactionDateHTTPReq IS NOT NULL AND UpdateStopTransactionDateHTTPResp IS NULL THEN
    # Request was sent but there was no response yet
    CALL WSHelper_FillSOAP11WSError("Client","Cannot issue a new request until previous response was received")
    RETURN -2 # waiting for the response
  ELSE
    IF crmService_ICRMForTIPTOPWS_ICRMForTIPTOPWSSoapLocation IS NULL THEN
      LET crmService_ICRMForTIPTOPWS_ICRMForTIPTOPWSSoapLocation = "http://10.40.40.232/WebCRM71_Develop/WebService/ICRMForTIPTOPWS/ICRMForTIPTOPWS.asmx"
    END IF
  END IF

  #
  # CREATE REQUEST
  #
  TRY
    LET UpdateStopTransactionDateHTTPReq = com.HTTPRequest.Create(crmService_ICRMForTIPTOPWS_ICRMForTIPTOPWSSoapLocation)
    CALL UpdateStopTransactionDateHTTPReq.setMethod("POST")
    CALL UpdateStopTransactionDateHTTPReq.setCharset("UTF-8")
    CALL UpdateStopTransactionDateHTTPReq.setHeader("SOAPAction","\"http://www.dsc.com.tw/CRM/ICRMForTIPTOPWS/UpdateStopTransactionDate\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    LET UpdateStopTransactionDateHTTPReq = NULL
    RETURN wsstatus
  END TRY

    #
    # Stax request
    #
    TRY
      LET writer = UpdateStopTransactionDateHTTPReq.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(crmService_UpdateStopTransactionDate,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL UpdateStopTransactionDateHTTPReq.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      LET UpdateStopTransactionDateHTTPReq = NULL
      RETURN wsstatus
    END TRY

  #
  # PROCESS RESPONSE
  #
  TRY
    LET UpdateStopTransactionDateHTTPResp = UpdateStopTransactionDateHTTPReq.getAsyncResponse()
    RETURN 0 # SUCCESS
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    LET UpdateStopTransactionDateHTTPReq = NULL
    RETURN wsstatus
  END TRY
END FUNCTION


FUNCTION crmService_UpdateStopTransactionDateResponse_g()
  DEFINE wsstatus   INTEGER
  DEFINE reader     xml.StaxReader

  LET wsstatus = -1

  #
  # CHECK PREVIOUS CALL  
  #
  IF UpdateStopTransactionDateHTTPReq IS NULL THEN
    # No request was sent
    CALL WSHelper_FillSOAP11WSError("Client","No request has been sent")
    RETURN -1
  END IF

  TRY
    #
    # PROCESS RESPONSE
    #
    IF UpdateStopTransactionDateHTTPResp IS NULL THEN
      # Still no response, try again
      LET UpdateStopTransactionDateHTTPResp = UpdateStopTransactionDateHTTPReq.getAsyncResponse()
    END IF

    IF UpdateStopTransactionDateHTTPResp IS NULL THEN
      # We got no response, still waiting for
      CALL WSHelper_FillSOAP11WSError("Client","Response was not yet received")
      RETURN -2
    END IF

      CASE UpdateStopTransactionDateHTTPResp.getStatusCode()

        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = UpdateStopTransactionDateHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL UpdateStopTransactionDateHTTPResp.endXmlResponse(reader)

        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = UpdateStopTransactionDateHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,crmService_UpdateStopTransactionDateResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL UpdateStopTransactionDateHTTPResp.endXmlResponse(reader)
          LET wsstatus = 0

        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||UpdateStopTransactionDateHTTPResp.getStatusCode()||" ("||UpdateStopTransactionDateHTTPResp.getStatusDescription()||")")

      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    END TRY

  #
  # RESET VARIABLES
  #
  LET UpdateStopTransactionDateHTTPReq = NULL
  LET UpdateStopTransactionDateHTTPResp = NULL
  RETURN wsstatus
END FUNCTION



#
# Operation: crmService_RemoveStopTransactionDate
#

#
# FUNCTION: crmService_RemoveStopTransactionDate
#
FUNCTION crmService_RemoveStopTransactionDate(p_InputData)
  DEFINE	soapStatus		INTEGER
  DEFINE	p_InputData		STRING

  LET crmService_RemoveStopTransactionDate.InputData = p_InputData

  LET soapStatus = crmService_RemoveStopTransactionDate_g()

  RETURN soapStatus, crmService_RemoveStopTransactionDateResponse.RemoveStopTransactionDateResult
END FUNCTION

#
# FUNCTION: crmService_RemoveStopTransactionDate_g
#   RETURNING: soapStatus
#   INPUT: GLOBAL crmService_RemoveStopTransactionDate
#   OUTPUT: GLOBAL crmService_RemoveStopTransactionDateResponse
#
FUNCTION crmService_RemoveStopTransactionDate_g()
  DEFINE wsstatus   INTEGER
  DEFINE retryAuth  INTEGER
  DEFINE retryProxy INTEGER
  DEFINE retry      INTEGER
  DEFINE request    com.HTTPRequest
  DEFINE response   com.HTTPResponse
  DEFINE writer     xml.StaxWriter
  DEFINE reader     xml.StaxReader

  #
  # INIT VARIABLES
  #
  LET wsstatus = -1
  LET retryAuth = FALSE
  LET retryProxy = FALSE
  LET retry = TRUE

  IF crmService_ICRMForTIPTOPWS_ICRMForTIPTOPWSSoapLocation IS NULL THEN
    LET crmService_ICRMForTIPTOPWS_ICRMForTIPTOPWSSoapLocation = "http://10.40.40.232/WebCRM71_Develop/WebService/ICRMForTIPTOPWS/ICRMForTIPTOPWS.asmx"
  END IF

  #
  # CREATE REQUEST
  #
  TRY
    LET request = com.HTTPRequest.Create(crmService_ICRMForTIPTOPWS_ICRMForTIPTOPWSSoapLocation)
    CALL request.setMethod("POST")
    CALL request.setCharset("UTF-8")
    CALL request.setHeader("SOAPAction","\"http://www.dsc.com.tw/CRM/ICRMForTIPTOPWS/RemoveStopTransactionDate\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    RETURN wsstatus
  END TRY

  # START LOOP
  WHILE retry
    LET retry = FALSE

    #
    # Stax request
    #
    TRY
      LET writer = request.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(crmService_RemoveStopTransactionDate,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL request.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY

    #
    # PROCESS RESPONSE
    #
    TRY
      LET response = request.getResponse()

      CASE response.getStatusCode()

        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)

        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = response.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,crmService_RemoveStopTransactionDateResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL response.endXmlResponse(reader)
          LET wsstatus = 0

        WHEN 401 # HTTP Authentication
          IF retryAuth THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 401 ("||response.getStatusDescription()||")")
          ELSE
            LET retryAuth = TRUE
            LET retry = TRUE
          END IF

        WHEN 407 # Proxy Authentication
          IF retryProxy THEN
            CALL WSHelper_FillSOAP11WSError("Server","HTTP Error 407 ("||response.getStatusDescription()||")")
          ELSE
            LET retryProxy = TRUE
            LET retry = TRUE
          END IF

        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||response.getStatusCode()||" ("||response.getStatusDescription()||")")

      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
      RETURN wsstatus
    END TRY

  # END LOOP
  END WHILE

  RETURN wsstatus

END FUNCTION


FUNCTION crmService_RemoveStopTransactionDateRequest_g()
  DEFINE wsstatus   INTEGER
  DEFINE writer     xml.StaxWriter

  #
  # CHECK PREVIOUS CALL  
  #
  IF RemoveStopTransactionDateHTTPReq IS NOT NULL AND RemoveStopTransactionDateHTTPResp IS NULL THEN
    # Request was sent but there was no response yet
    CALL WSHelper_FillSOAP11WSError("Client","Cannot issue a new request until previous response was received")
    RETURN -2 # waiting for the response
  ELSE
    IF crmService_ICRMForTIPTOPWS_ICRMForTIPTOPWSSoapLocation IS NULL THEN
      LET crmService_ICRMForTIPTOPWS_ICRMForTIPTOPWSSoapLocation = "http://10.40.40.232/WebCRM71_Develop/WebService/ICRMForTIPTOPWS/ICRMForTIPTOPWS.asmx"
    END IF
  END IF

  #
  # CREATE REQUEST
  #
  TRY
    LET RemoveStopTransactionDateHTTPReq = com.HTTPRequest.Create(crmService_ICRMForTIPTOPWS_ICRMForTIPTOPWSSoapLocation)
    CALL RemoveStopTransactionDateHTTPReq.setMethod("POST")
    CALL RemoveStopTransactionDateHTTPReq.setCharset("UTF-8")
    CALL RemoveStopTransactionDateHTTPReq.setHeader("SOAPAction","\"http://www.dsc.com.tw/CRM/ICRMForTIPTOPWS/RemoveStopTransactionDate\"")
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Client","Cannot create HTTPRequest")
    LET RemoveStopTransactionDateHTTPReq = NULL
    RETURN wsstatus
  END TRY

    #
    # Stax request
    #
    TRY
      LET writer = RemoveStopTransactionDateHTTPReq.beginXmlRequest()
      CALL WSHelper_WriteStaxSOAP11StartEnvelope(writer)
      CALL WSHelper_WriteStaxSOAP11StartBody(writer)
      CALL xml.Serializer.VariableToStax(crmService_RemoveStopTransactionDate,writer)
      CALL WSHelper_WriteStaxSOAP11EndBody(writer)
      CALL WSHelper_WriteStaxSOAP11EndEnvelope(writer)
      CALL RemoveStopTransactionDateHTTPReq.endXmlRequest(writer)
    CATCH
      LET wsstatus = STATUS
      CALL WSHelper_FillSOAP11WSError("Client",SQLCA.SQLERRM)
      LET RemoveStopTransactionDateHTTPReq = NULL
      RETURN wsstatus
    END TRY

  #
  # PROCESS RESPONSE
  #
  TRY
    LET RemoveStopTransactionDateHTTPResp = RemoveStopTransactionDateHTTPReq.getAsyncResponse()
    RETURN 0 # SUCCESS
  CATCH
    LET wsstatus = STATUS
    CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    LET RemoveStopTransactionDateHTTPReq = NULL
    RETURN wsstatus
  END TRY
END FUNCTION


FUNCTION crmService_RemoveStopTransactionDateResponse_g()
  DEFINE wsstatus   INTEGER
  DEFINE reader     xml.StaxReader

  LET wsstatus = -1

  #
  # CHECK PREVIOUS CALL  
  #
  IF RemoveStopTransactionDateHTTPReq IS NULL THEN
    # No request was sent
    CALL WSHelper_FillSOAP11WSError("Client","No request has been sent")
    RETURN -1
  END IF

  TRY
    #
    # PROCESS RESPONSE
    #
    IF RemoveStopTransactionDateHTTPResp IS NULL THEN
      # Still no response, try again
      LET RemoveStopTransactionDateHTTPResp = RemoveStopTransactionDateHTTPReq.getAsyncResponse()
    END IF

    IF RemoveStopTransactionDateHTTPResp IS NULL THEN
      # We got no response, still waiting for
      CALL WSHelper_FillSOAP11WSError("Client","Response was not yet received")
      RETURN -2
    END IF

      CASE RemoveStopTransactionDateHTTPResp.getStatusCode()

        WHEN 500 # SOAP Fault
          #
          # STAX SOAP FAULT
          #
          LET reader = RemoveStopTransactionDateHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            CALL reader.nextSibling() # Skip SOAP headers
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11Fault(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL RemoveStopTransactionDateHTTPResp.endXmlResponse(reader)

        WHEN 200 # SOAP Result
          #
          # STAX SOAP RESPONSE
          #
          LET reader = RemoveStopTransactionDateHTTPResp.beginXmlResponse() # Begin Streaming Response
          IF NOT WSHelper_ReadStaxSOAP11StartEnvelope(reader) THEN
            EXIT CASE
          END IF
          IF WSHelper_CheckStaxSOAP11Header(reader) THEN
            IF NOT reader.isEmptyElement() THEN
              CALL WSHelper_FillSOAP11WSError("Client","No SOAP Header expected")
              EXIT CASE
            ELSE
              CALL reader.nextTag()
            END IF
          END IF
          IF NOT WSHelper_ReadStaxSOAP11StartBody(reader) THEN
            EXIT CASE
          END IF
          # Retrieve SOAP Message taking soap:root attribute into account
          IF NOT WSHelper_RetrieveStaxSOAP11Message(reader) THEN
            EXIT CASE
          END IF
          CALL xml.Serializer.StaxToVariable(reader,crmService_RemoveStopTransactionDateResponse)
          IF NOT WSHelper_ReadStaxSOAP11EndBody(reader) THEN
            EXIT CASE
          END IF
          IF NOT WSHelper_ReadStaxSOAP11EndEnvelope(reader) THEN
            EXIT CASE
          END IF
          # End Streaming Response
          CALL RemoveStopTransactionDateHTTPResp.endXmlResponse(reader)
          LET wsstatus = 0

        OTHERWISE
          CALL WSHelper_FillSOAP11WSError("Server","HTTP Error "||RemoveStopTransactionDateHTTPResp.getStatusCode()||" ("||RemoveStopTransactionDateHTTPResp.getStatusDescription()||")")

      END CASE
    CATCH
      LET wsstatus = status
      CALL WSHelper_FillSOAP11WSError("Server",SQLCA.SQLERRM)
    END TRY

  #
  # RESET VARIABLES
  #
  LET RemoveStopTransactionDateHTTPReq = NULL
  LET RemoveStopTransactionDateHTTPResp = NULL
  RETURN wsstatus
END FUNCTION


